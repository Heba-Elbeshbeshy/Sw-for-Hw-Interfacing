
project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c1c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000db0  08000db0  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000db0  08000db0  000201d8  2**0
                  CONTENTS
  4 .ARM          00000000  08000db0  08000db0  000201d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000db0  08000db0  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000db0  08000db0  00010db0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000db4  08000db4  00010db4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  08000db8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000340  200001d8  08000f90  000201d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000518  08000f90  00020518  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000e13  00000000  00000000  00020208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000055b  00000000  00000000  0002101b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00021578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000c8  00000000  00000000  00021698  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000e683  00000000  00000000  00021760  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001b00  00000000  00000000  0002fde3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00051359  00000000  00000000  000318e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00082c3c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002d8  00000000  00000000  00082c90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	200001d8 	.word	0x200001d8
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000d98 	.word	0x08000d98

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	200001dc 	.word	0x200001dc
 80001d0:	08000d98 	.word	0x08000d98

080001d4 <DMA_Init>:
                                            {DMA2_LISR, DMA2_HISR, DMA2_LIFCR, DMA2_HIFCR}};

unsigned int ClearFlags[4] = {0, 6, 16, 22};// DMA_L/H_IFCR

void DMA_Init(unsigned char Peripheral_ID, unsigned char Stream_NM)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	460a      	mov	r2, r1
 80001de:	71fb      	strb	r3, [r7, #7]
 80001e0:	4613      	mov	r3, r2
 80001e2:	71bb      	strb	r3, [r7, #6]
	*RCC_AHB1ENR |= (0x01 << ( Peripheral_ID + (unsigned char)21)); //DMAEN
 80001e4:	4b08      	ldr	r3, [pc, #32]	; (8000208 <DMA_Init+0x34>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	79fa      	ldrb	r2, [r7, #7]
 80001ea:	3215      	adds	r2, #21
 80001ec:	2101      	movs	r1, #1
 80001ee:	fa01 f202 	lsl.w	r2, r1, r2
 80001f2:	4611      	mov	r1, r2
 80001f4:	4a04      	ldr	r2, [pc, #16]	; (8000208 <DMA_Init+0x34>)
 80001f6:	430b      	orrs	r3, r1
 80001f8:	6013      	str	r3, [r2, #0]
}
 80001fa:	bf00      	nop
 80001fc:	370c      	adds	r7, #12
 80001fe:	46bd      	mov	sp, r7
 8000200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000204:	4770      	bx	lr
 8000206:	bf00      	nop
 8000208:	40023830 	.word	0x40023830

0800020c <DMA_ChannelParameters>:

//A function to initialize the DMA channel parameters
void DMA_ChannelParameters(unsigned char Peripheral_ID, unsigned char Stream_NM,
		unsigned char Trigger_Src, unsigned int * Src_Add, unsigned int * Dest_Add, unsigned int NM_Of_Transfer,
		unsigned int DIR, unsigned int Item_Size, unsigned char Mode, unsigned int Transfer_Type)
{
 800020c:	b4b0      	push	{r4, r5, r7}
 800020e:	b083      	sub	sp, #12
 8000210:	af00      	add	r7, sp, #0
 8000212:	603b      	str	r3, [r7, #0]
 8000214:	4603      	mov	r3, r0
 8000216:	71fb      	strb	r3, [r7, #7]
 8000218:	460b      	mov	r3, r1
 800021a:	71bb      	strb	r3, [r7, #6]
 800021c:	4613      	mov	r3, r2
 800021e:	717b      	strb	r3, [r7, #5]
	//	Clear  DMA_SxCR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] &= ~(0xff << 0);
 8000220:	79f9      	ldrb	r1, [r7, #7]
 8000222:	79bb      	ldrb	r3, [r7, #6]
 8000224:	48b3      	ldr	r0, [pc, #716]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 8000226:	461a      	mov	r2, r3
 8000228:	0052      	lsls	r2, r2, #1
 800022a:	441a      	add	r2, r3
 800022c:	00d3      	lsls	r3, r2, #3
 800022e:	461a      	mov	r2, r3
 8000230:	460b      	mov	r3, r1
 8000232:	005b      	lsls	r3, r3, #1
 8000234:	440b      	add	r3, r1
 8000236:	019b      	lsls	r3, r3, #6
 8000238:	4413      	add	r3, r2
 800023a:	4403      	add	r3, r0
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	6818      	ldr	r0, [r3, #0]
 8000240:	79f9      	ldrb	r1, [r7, #7]
 8000242:	79bb      	ldrb	r3, [r7, #6]
 8000244:	4cab      	ldr	r4, [pc, #684]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 8000246:	461a      	mov	r2, r3
 8000248:	0052      	lsls	r2, r2, #1
 800024a:	441a      	add	r2, r3
 800024c:	00d3      	lsls	r3, r2, #3
 800024e:	461a      	mov	r2, r3
 8000250:	460b      	mov	r3, r1
 8000252:	005b      	lsls	r3, r3, #1
 8000254:	440b      	add	r3, r1
 8000256:	019b      	lsls	r3, r3, #6
 8000258:	4413      	add	r3, r2
 800025a:	4423      	add	r3, r4
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
 8000262:	601a      	str	r2, [r3, #0]
	// Clear DMA2_S0FCR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] &= ~(0xff << 0);
 8000264:	79f9      	ldrb	r1, [r7, #7]
 8000266:	79bb      	ldrb	r3, [r7, #6]
 8000268:	48a2      	ldr	r0, [pc, #648]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 800026a:	461a      	mov	r2, r3
 800026c:	0052      	lsls	r2, r2, #1
 800026e:	441a      	add	r2, r3
 8000270:	00d3      	lsls	r3, r2, #3
 8000272:	461a      	mov	r2, r3
 8000274:	460b      	mov	r3, r1
 8000276:	005b      	lsls	r3, r3, #1
 8000278:	440b      	add	r3, r1
 800027a:	019b      	lsls	r3, r3, #6
 800027c:	4413      	add	r3, r2
 800027e:	4403      	add	r3, r0
 8000280:	3314      	adds	r3, #20
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	6818      	ldr	r0, [r3, #0]
 8000286:	79f9      	ldrb	r1, [r7, #7]
 8000288:	79bb      	ldrb	r3, [r7, #6]
 800028a:	4c9a      	ldr	r4, [pc, #616]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 800028c:	461a      	mov	r2, r3
 800028e:	0052      	lsls	r2, r2, #1
 8000290:	441a      	add	r2, r3
 8000292:	00d3      	lsls	r3, r2, #3
 8000294:	461a      	mov	r2, r3
 8000296:	460b      	mov	r3, r1
 8000298:	005b      	lsls	r3, r3, #1
 800029a:	440b      	add	r3, r1
 800029c:	019b      	lsls	r3, r3, #6
 800029e:	4413      	add	r3, r2
 80002a0:	4423      	add	r3, r4
 80002a2:	3314      	adds	r3, #20
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
 80002aa:	601a      	str	r2, [r3, #0]

//	 DMA_SxCR Bit 0 Disabling
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] &= ~(0x01 << 0);
 80002ac:	79f9      	ldrb	r1, [r7, #7]
 80002ae:	79bb      	ldrb	r3, [r7, #6]
 80002b0:	4890      	ldr	r0, [pc, #576]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80002b2:	461a      	mov	r2, r3
 80002b4:	0052      	lsls	r2, r2, #1
 80002b6:	441a      	add	r2, r3
 80002b8:	00d3      	lsls	r3, r2, #3
 80002ba:	461a      	mov	r2, r3
 80002bc:	460b      	mov	r3, r1
 80002be:	005b      	lsls	r3, r3, #1
 80002c0:	440b      	add	r3, r1
 80002c2:	019b      	lsls	r3, r3, #6
 80002c4:	4413      	add	r3, r2
 80002c6:	4403      	add	r3, r0
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	6818      	ldr	r0, [r3, #0]
 80002cc:	79f9      	ldrb	r1, [r7, #7]
 80002ce:	79bb      	ldrb	r3, [r7, #6]
 80002d0:	4c88      	ldr	r4, [pc, #544]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80002d2:	461a      	mov	r2, r3
 80002d4:	0052      	lsls	r2, r2, #1
 80002d6:	441a      	add	r2, r3
 80002d8:	00d3      	lsls	r3, r2, #3
 80002da:	461a      	mov	r2, r3
 80002dc:	460b      	mov	r3, r1
 80002de:	005b      	lsls	r3, r3, #1
 80002e0:	440b      	add	r3, r1
 80002e2:	019b      	lsls	r3, r3, #6
 80002e4:	4413      	add	r3, r2
 80002e6:	4423      	add	r3, r4
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	f020 0201 	bic.w	r2, r0, #1
 80002ee:	601a      	str	r2, [r3, #0]
//	 Bits 17:16 Priority level
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x03 << 16);//11 very high
 80002f0:	79f9      	ldrb	r1, [r7, #7]
 80002f2:	79bb      	ldrb	r3, [r7, #6]
 80002f4:	487f      	ldr	r0, [pc, #508]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80002f6:	461a      	mov	r2, r3
 80002f8:	0052      	lsls	r2, r2, #1
 80002fa:	441a      	add	r2, r3
 80002fc:	00d3      	lsls	r3, r2, #3
 80002fe:	461a      	mov	r2, r3
 8000300:	460b      	mov	r3, r1
 8000302:	005b      	lsls	r3, r3, #1
 8000304:	440b      	add	r3, r1
 8000306:	019b      	lsls	r3, r3, #6
 8000308:	4413      	add	r3, r2
 800030a:	4403      	add	r3, r0
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	6818      	ldr	r0, [r3, #0]
 8000310:	79f9      	ldrb	r1, [r7, #7]
 8000312:	79bb      	ldrb	r3, [r7, #6]
 8000314:	4c77      	ldr	r4, [pc, #476]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 8000316:	461a      	mov	r2, r3
 8000318:	0052      	lsls	r2, r2, #1
 800031a:	441a      	add	r2, r3
 800031c:	00d3      	lsls	r3, r2, #3
 800031e:	461a      	mov	r2, r3
 8000320:	460b      	mov	r3, r1
 8000322:	005b      	lsls	r3, r3, #1
 8000324:	440b      	add	r3, r1
 8000326:	019b      	lsls	r3, r3, #6
 8000328:	4413      	add	r3, r2
 800032a:	4423      	add	r3, r4
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	f440 3240 	orr.w	r2, r0, #196608	; 0x30000
 8000332:	601a      	str	r2, [r3, #0]

//	 Bits 7:6 DIR: Data transfer direction
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (DIR << 6);
 8000334:	79f9      	ldrb	r1, [r7, #7]
 8000336:	79bb      	ldrb	r3, [r7, #6]
 8000338:	486e      	ldr	r0, [pc, #440]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 800033a:	461a      	mov	r2, r3
 800033c:	0052      	lsls	r2, r2, #1
 800033e:	441a      	add	r2, r3
 8000340:	00d3      	lsls	r3, r2, #3
 8000342:	461a      	mov	r2, r3
 8000344:	460b      	mov	r3, r1
 8000346:	005b      	lsls	r3, r3, #1
 8000348:	440b      	add	r3, r1
 800034a:	019b      	lsls	r3, r3, #6
 800034c:	4413      	add	r3, r2
 800034e:	4403      	add	r3, r0
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	681c      	ldr	r4, [r3, #0]
 8000354:	6a3b      	ldr	r3, [r7, #32]
 8000356:	0198      	lsls	r0, r3, #6
 8000358:	79f9      	ldrb	r1, [r7, #7]
 800035a:	79bb      	ldrb	r3, [r7, #6]
 800035c:	4d65      	ldr	r5, [pc, #404]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 800035e:	461a      	mov	r2, r3
 8000360:	0052      	lsls	r2, r2, #1
 8000362:	441a      	add	r2, r3
 8000364:	00d3      	lsls	r3, r2, #3
 8000366:	461a      	mov	r2, r3
 8000368:	460b      	mov	r3, r1
 800036a:	005b      	lsls	r3, r3, #1
 800036c:	440b      	add	r3, r1
 800036e:	019b      	lsls	r3, r3, #6
 8000370:	4413      	add	r3, r2
 8000372:	442b      	add	r3, r5
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	ea44 0200 	orr.w	r2, r4, r0
 800037a:	601a      	str	r2, [r3, #0]

//	 Item_Size
//	 Bits 14:13 MSIZE: Memory data size
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Item_Size << 13);
 800037c:	79f9      	ldrb	r1, [r7, #7]
 800037e:	79bb      	ldrb	r3, [r7, #6]
 8000380:	485c      	ldr	r0, [pc, #368]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 8000382:	461a      	mov	r2, r3
 8000384:	0052      	lsls	r2, r2, #1
 8000386:	441a      	add	r2, r3
 8000388:	00d3      	lsls	r3, r2, #3
 800038a:	461a      	mov	r2, r3
 800038c:	460b      	mov	r3, r1
 800038e:	005b      	lsls	r3, r3, #1
 8000390:	440b      	add	r3, r1
 8000392:	019b      	lsls	r3, r3, #6
 8000394:	4413      	add	r3, r2
 8000396:	4403      	add	r3, r0
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	681c      	ldr	r4, [r3, #0]
 800039c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800039e:	0358      	lsls	r0, r3, #13
 80003a0:	79f9      	ldrb	r1, [r7, #7]
 80003a2:	79bb      	ldrb	r3, [r7, #6]
 80003a4:	4d53      	ldr	r5, [pc, #332]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80003a6:	461a      	mov	r2, r3
 80003a8:	0052      	lsls	r2, r2, #1
 80003aa:	441a      	add	r2, r3
 80003ac:	00d3      	lsls	r3, r2, #3
 80003ae:	461a      	mov	r2, r3
 80003b0:	460b      	mov	r3, r1
 80003b2:	005b      	lsls	r3, r3, #1
 80003b4:	440b      	add	r3, r1
 80003b6:	019b      	lsls	r3, r3, #6
 80003b8:	4413      	add	r3, r2
 80003ba:	442b      	add	r3, r5
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	ea44 0200 	orr.w	r2, r4, r0
 80003c2:	601a      	str	r2, [r3, #0]
//	 Bits 12:11 PSIZE: Peripheral data size
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Item_Size << 11);
 80003c4:	79f9      	ldrb	r1, [r7, #7]
 80003c6:	79bb      	ldrb	r3, [r7, #6]
 80003c8:	484a      	ldr	r0, [pc, #296]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80003ca:	461a      	mov	r2, r3
 80003cc:	0052      	lsls	r2, r2, #1
 80003ce:	441a      	add	r2, r3
 80003d0:	00d3      	lsls	r3, r2, #3
 80003d2:	461a      	mov	r2, r3
 80003d4:	460b      	mov	r3, r1
 80003d6:	005b      	lsls	r3, r3, #1
 80003d8:	440b      	add	r3, r1
 80003da:	019b      	lsls	r3, r3, #6
 80003dc:	4413      	add	r3, r2
 80003de:	4403      	add	r3, r0
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	681c      	ldr	r4, [r3, #0]
 80003e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80003e6:	02d8      	lsls	r0, r3, #11
 80003e8:	79f9      	ldrb	r1, [r7, #7]
 80003ea:	79bb      	ldrb	r3, [r7, #6]
 80003ec:	4d41      	ldr	r5, [pc, #260]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80003ee:	461a      	mov	r2, r3
 80003f0:	0052      	lsls	r2, r2, #1
 80003f2:	441a      	add	r2, r3
 80003f4:	00d3      	lsls	r3, r2, #3
 80003f6:	461a      	mov	r2, r3
 80003f8:	460b      	mov	r3, r1
 80003fa:	005b      	lsls	r3, r3, #1
 80003fc:	440b      	add	r3, r1
 80003fe:	019b      	lsls	r3, r3, #6
 8000400:	4413      	add	r3, r2
 8000402:	442b      	add	r3, r5
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	ea44 0200 	orr.w	r2, r4, r0
 800040a:	601a      	str	r2, [r3, #0]

	switch(Mode)
 800040c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8000410:	2b00      	cmp	r3, #0
 8000412:	d071      	beq.n	80004f8 <DMA_ChannelParameters+0x2ec>
 8000414:	2b01      	cmp	r3, #1
 8000416:	f040 80b6 	bne.w	8000586 <DMA_ChannelParameters+0x37a>
	{
		case(FIFO):
	  //	 Bit 2 DMDIS: Direct mode disable
			*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] |= (0x01 << 2); //1: Direct mode disabled
 800041a:	79f9      	ldrb	r1, [r7, #7]
 800041c:	79bb      	ldrb	r3, [r7, #6]
 800041e:	4835      	ldr	r0, [pc, #212]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 8000420:	461a      	mov	r2, r3
 8000422:	0052      	lsls	r2, r2, #1
 8000424:	441a      	add	r2, r3
 8000426:	00d3      	lsls	r3, r2, #3
 8000428:	461a      	mov	r2, r3
 800042a:	460b      	mov	r3, r1
 800042c:	005b      	lsls	r3, r3, #1
 800042e:	440b      	add	r3, r1
 8000430:	019b      	lsls	r3, r3, #6
 8000432:	4413      	add	r3, r2
 8000434:	4403      	add	r3, r0
 8000436:	3314      	adds	r3, #20
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	6818      	ldr	r0, [r3, #0]
 800043c:	79f9      	ldrb	r1, [r7, #7]
 800043e:	79bb      	ldrb	r3, [r7, #6]
 8000440:	4c2c      	ldr	r4, [pc, #176]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 8000442:	461a      	mov	r2, r3
 8000444:	0052      	lsls	r2, r2, #1
 8000446:	441a      	add	r2, r3
 8000448:	00d3      	lsls	r3, r2, #3
 800044a:	461a      	mov	r2, r3
 800044c:	460b      	mov	r3, r1
 800044e:	005b      	lsls	r3, r3, #1
 8000450:	440b      	add	r3, r1
 8000452:	019b      	lsls	r3, r3, #6
 8000454:	4413      	add	r3, r2
 8000456:	4423      	add	r3, r4
 8000458:	3314      	adds	r3, #20
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	f040 0204 	orr.w	r2, r0, #4
 8000460:	601a      	str	r2, [r3, #0]
	  //	 Bits 1:0 FTH: FIFO threshold selection
			*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] |= (0x03 << 0); //11: full FIFO
 8000462:	79f9      	ldrb	r1, [r7, #7]
 8000464:	79bb      	ldrb	r3, [r7, #6]
 8000466:	4823      	ldr	r0, [pc, #140]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 8000468:	461a      	mov	r2, r3
 800046a:	0052      	lsls	r2, r2, #1
 800046c:	441a      	add	r2, r3
 800046e:	00d3      	lsls	r3, r2, #3
 8000470:	461a      	mov	r2, r3
 8000472:	460b      	mov	r3, r1
 8000474:	005b      	lsls	r3, r3, #1
 8000476:	440b      	add	r3, r1
 8000478:	019b      	lsls	r3, r3, #6
 800047a:	4413      	add	r3, r2
 800047c:	4403      	add	r3, r0
 800047e:	3314      	adds	r3, #20
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	6818      	ldr	r0, [r3, #0]
 8000484:	79f9      	ldrb	r1, [r7, #7]
 8000486:	79bb      	ldrb	r3, [r7, #6]
 8000488:	4c1a      	ldr	r4, [pc, #104]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 800048a:	461a      	mov	r2, r3
 800048c:	0052      	lsls	r2, r2, #1
 800048e:	441a      	add	r2, r3
 8000490:	00d3      	lsls	r3, r2, #3
 8000492:	461a      	mov	r2, r3
 8000494:	460b      	mov	r3, r1
 8000496:	005b      	lsls	r3, r3, #1
 8000498:	440b      	add	r3, r1
 800049a:	019b      	lsls	r3, r3, #6
 800049c:	4413      	add	r3, r2
 800049e:	4423      	add	r3, r4
 80004a0:	3314      	adds	r3, #20
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	f040 0203 	orr.w	r2, r0, #3
 80004a8:	601a      	str	r2, [r3, #0]
    //      Bit 7 FEIE: FIFO error interrupt enable
			*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] |= (0x01 << 0); //1: FE interrupt enabled
 80004aa:	79f9      	ldrb	r1, [r7, #7]
 80004ac:	79bb      	ldrb	r3, [r7, #6]
 80004ae:	4811      	ldr	r0, [pc, #68]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80004b0:	461a      	mov	r2, r3
 80004b2:	0052      	lsls	r2, r2, #1
 80004b4:	441a      	add	r2, r3
 80004b6:	00d3      	lsls	r3, r2, #3
 80004b8:	461a      	mov	r2, r3
 80004ba:	460b      	mov	r3, r1
 80004bc:	005b      	lsls	r3, r3, #1
 80004be:	440b      	add	r3, r1
 80004c0:	019b      	lsls	r3, r3, #6
 80004c2:	4413      	add	r3, r2
 80004c4:	4403      	add	r3, r0
 80004c6:	3314      	adds	r3, #20
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	6818      	ldr	r0, [r3, #0]
 80004cc:	79f9      	ldrb	r1, [r7, #7]
 80004ce:	79bb      	ldrb	r3, [r7, #6]
 80004d0:	4c08      	ldr	r4, [pc, #32]	; (80004f4 <DMA_ChannelParameters+0x2e8>)
 80004d2:	461a      	mov	r2, r3
 80004d4:	0052      	lsls	r2, r2, #1
 80004d6:	441a      	add	r2, r3
 80004d8:	00d3      	lsls	r3, r2, #3
 80004da:	461a      	mov	r2, r3
 80004dc:	460b      	mov	r3, r1
 80004de:	005b      	lsls	r3, r3, #1
 80004e0:	440b      	add	r3, r1
 80004e2:	019b      	lsls	r3, r3, #6
 80004e4:	4413      	add	r3, r2
 80004e6:	4423      	add	r3, r4
 80004e8:	3314      	adds	r3, #20
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	f040 0201 	orr.w	r2, r0, #1
 80004f0:	601a      	str	r2, [r3, #0]
		break;
 80004f2:	e048      	b.n	8000586 <DMA_ChannelParameters+0x37a>
 80004f4:	20000000 	.word	0x20000000
		case(Direct_Mode):
			*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] &= ~(0x01 << 2); //0: Direct mode enabled
 80004f8:	79f9      	ldrb	r1, [r7, #7]
 80004fa:	79bb      	ldrb	r3, [r7, #6]
 80004fc:	48a7      	ldr	r0, [pc, #668]	; (800079c <DMA_ChannelParameters+0x590>)
 80004fe:	461a      	mov	r2, r3
 8000500:	0052      	lsls	r2, r2, #1
 8000502:	441a      	add	r2, r3
 8000504:	00d3      	lsls	r3, r2, #3
 8000506:	461a      	mov	r2, r3
 8000508:	460b      	mov	r3, r1
 800050a:	005b      	lsls	r3, r3, #1
 800050c:	440b      	add	r3, r1
 800050e:	019b      	lsls	r3, r3, #6
 8000510:	4413      	add	r3, r2
 8000512:	4403      	add	r3, r0
 8000514:	3314      	adds	r3, #20
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	6818      	ldr	r0, [r3, #0]
 800051a:	79f9      	ldrb	r1, [r7, #7]
 800051c:	79bb      	ldrb	r3, [r7, #6]
 800051e:	4c9f      	ldr	r4, [pc, #636]	; (800079c <DMA_ChannelParameters+0x590>)
 8000520:	461a      	mov	r2, r3
 8000522:	0052      	lsls	r2, r2, #1
 8000524:	441a      	add	r2, r3
 8000526:	00d3      	lsls	r3, r2, #3
 8000528:	461a      	mov	r2, r3
 800052a:	460b      	mov	r3, r1
 800052c:	005b      	lsls	r3, r3, #1
 800052e:	440b      	add	r3, r1
 8000530:	019b      	lsls	r3, r3, #6
 8000532:	4413      	add	r3, r2
 8000534:	4423      	add	r3, r4
 8000536:	3314      	adds	r3, #20
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	f020 0204 	bic.w	r2, r0, #4
 800053e:	601a      	str	r2, [r3, #0]
		    *DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 1);//DMEIE  Direct mode error interrupt enable
 8000540:	79f9      	ldrb	r1, [r7, #7]
 8000542:	79bb      	ldrb	r3, [r7, #6]
 8000544:	4895      	ldr	r0, [pc, #596]	; (800079c <DMA_ChannelParameters+0x590>)
 8000546:	461a      	mov	r2, r3
 8000548:	0052      	lsls	r2, r2, #1
 800054a:	441a      	add	r2, r3
 800054c:	00d3      	lsls	r3, r2, #3
 800054e:	461a      	mov	r2, r3
 8000550:	460b      	mov	r3, r1
 8000552:	005b      	lsls	r3, r3, #1
 8000554:	440b      	add	r3, r1
 8000556:	019b      	lsls	r3, r3, #6
 8000558:	4413      	add	r3, r2
 800055a:	4403      	add	r3, r0
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	6818      	ldr	r0, [r3, #0]
 8000560:	79f9      	ldrb	r1, [r7, #7]
 8000562:	79bb      	ldrb	r3, [r7, #6]
 8000564:	4c8d      	ldr	r4, [pc, #564]	; (800079c <DMA_ChannelParameters+0x590>)
 8000566:	461a      	mov	r2, r3
 8000568:	0052      	lsls	r2, r2, #1
 800056a:	441a      	add	r2, r3
 800056c:	00d3      	lsls	r3, r2, #3
 800056e:	461a      	mov	r2, r3
 8000570:	460b      	mov	r3, r1
 8000572:	005b      	lsls	r3, r3, #1
 8000574:	440b      	add	r3, r1
 8000576:	019b      	lsls	r3, r3, #6
 8000578:	4413      	add	r3, r2
 800057a:	4423      	add	r3, r4
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	f040 0202 	orr.w	r2, r0, #2
 8000582:	601a      	str	r2, [r3, #0]
		break;
 8000584:	bf00      	nop
	}

//	 Bits 24:23 MBURST: Memory burst transfer configuration
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Transfer_Type << 23);
 8000586:	79f9      	ldrb	r1, [r7, #7]
 8000588:	79bb      	ldrb	r3, [r7, #6]
 800058a:	4884      	ldr	r0, [pc, #528]	; (800079c <DMA_ChannelParameters+0x590>)
 800058c:	461a      	mov	r2, r3
 800058e:	0052      	lsls	r2, r2, #1
 8000590:	441a      	add	r2, r3
 8000592:	00d3      	lsls	r3, r2, #3
 8000594:	461a      	mov	r2, r3
 8000596:	460b      	mov	r3, r1
 8000598:	005b      	lsls	r3, r3, #1
 800059a:	440b      	add	r3, r1
 800059c:	019b      	lsls	r3, r3, #6
 800059e:	4413      	add	r3, r2
 80005a0:	4403      	add	r3, r0
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	681c      	ldr	r4, [r3, #0]
 80005a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80005a8:	05d8      	lsls	r0, r3, #23
 80005aa:	79f9      	ldrb	r1, [r7, #7]
 80005ac:	79bb      	ldrb	r3, [r7, #6]
 80005ae:	4d7b      	ldr	r5, [pc, #492]	; (800079c <DMA_ChannelParameters+0x590>)
 80005b0:	461a      	mov	r2, r3
 80005b2:	0052      	lsls	r2, r2, #1
 80005b4:	441a      	add	r2, r3
 80005b6:	00d3      	lsls	r3, r2, #3
 80005b8:	461a      	mov	r2, r3
 80005ba:	460b      	mov	r3, r1
 80005bc:	005b      	lsls	r3, r3, #1
 80005be:	440b      	add	r3, r1
 80005c0:	019b      	lsls	r3, r3, #6
 80005c2:	4413      	add	r3, r2
 80005c4:	442b      	add	r3, r5
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	ea44 0200 	orr.w	r2, r4, r0
 80005cc:	601a      	str	r2, [r3, #0]
//	 Bits 22:21 PBURST: Peripheral burst transfer configuration
    *DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Transfer_Type << 21);
 80005ce:	79f9      	ldrb	r1, [r7, #7]
 80005d0:	79bb      	ldrb	r3, [r7, #6]
 80005d2:	4872      	ldr	r0, [pc, #456]	; (800079c <DMA_ChannelParameters+0x590>)
 80005d4:	461a      	mov	r2, r3
 80005d6:	0052      	lsls	r2, r2, #1
 80005d8:	441a      	add	r2, r3
 80005da:	00d3      	lsls	r3, r2, #3
 80005dc:	461a      	mov	r2, r3
 80005de:	460b      	mov	r3, r1
 80005e0:	005b      	lsls	r3, r3, #1
 80005e2:	440b      	add	r3, r1
 80005e4:	019b      	lsls	r3, r3, #6
 80005e6:	4413      	add	r3, r2
 80005e8:	4403      	add	r3, r0
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	681c      	ldr	r4, [r3, #0]
 80005ee:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80005f0:	0558      	lsls	r0, r3, #21
 80005f2:	79f9      	ldrb	r1, [r7, #7]
 80005f4:	79bb      	ldrb	r3, [r7, #6]
 80005f6:	4d69      	ldr	r5, [pc, #420]	; (800079c <DMA_ChannelParameters+0x590>)
 80005f8:	461a      	mov	r2, r3
 80005fa:	0052      	lsls	r2, r2, #1
 80005fc:	441a      	add	r2, r3
 80005fe:	00d3      	lsls	r3, r2, #3
 8000600:	461a      	mov	r2, r3
 8000602:	460b      	mov	r3, r1
 8000604:	005b      	lsls	r3, r3, #1
 8000606:	440b      	add	r3, r1
 8000608:	019b      	lsls	r3, r3, #6
 800060a:	4413      	add	r3, r2
 800060c:	442b      	add	r3, r5
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	ea44 0200 	orr.w	r2, r4, r0
 8000614:	601a      	str	r2, [r3, #0]
//	 Bit 9 PINC: Peripheral increment mode
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 9); //1: PINC incremented
 8000616:	79f9      	ldrb	r1, [r7, #7]
 8000618:	79bb      	ldrb	r3, [r7, #6]
 800061a:	4860      	ldr	r0, [pc, #384]	; (800079c <DMA_ChannelParameters+0x590>)
 800061c:	461a      	mov	r2, r3
 800061e:	0052      	lsls	r2, r2, #1
 8000620:	441a      	add	r2, r3
 8000622:	00d3      	lsls	r3, r2, #3
 8000624:	461a      	mov	r2, r3
 8000626:	460b      	mov	r3, r1
 8000628:	005b      	lsls	r3, r3, #1
 800062a:	440b      	add	r3, r1
 800062c:	019b      	lsls	r3, r3, #6
 800062e:	4413      	add	r3, r2
 8000630:	4403      	add	r3, r0
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	6818      	ldr	r0, [r3, #0]
 8000636:	79f9      	ldrb	r1, [r7, #7]
 8000638:	79bb      	ldrb	r3, [r7, #6]
 800063a:	4c58      	ldr	r4, [pc, #352]	; (800079c <DMA_ChannelParameters+0x590>)
 800063c:	461a      	mov	r2, r3
 800063e:	0052      	lsls	r2, r2, #1
 8000640:	441a      	add	r2, r3
 8000642:	00d3      	lsls	r3, r2, #3
 8000644:	461a      	mov	r2, r3
 8000646:	460b      	mov	r3, r1
 8000648:	005b      	lsls	r3, r3, #1
 800064a:	440b      	add	r3, r1
 800064c:	019b      	lsls	r3, r3, #6
 800064e:	4413      	add	r3, r2
 8000650:	4423      	add	r3, r4
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	f440 7200 	orr.w	r2, r0, #512	; 0x200
 8000658:	601a      	str	r2, [r3, #0]
//	 Bit 10 MINC: Memory increment mode
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 10); //1: MINC incremented
 800065a:	79f9      	ldrb	r1, [r7, #7]
 800065c:	79bb      	ldrb	r3, [r7, #6]
 800065e:	484f      	ldr	r0, [pc, #316]	; (800079c <DMA_ChannelParameters+0x590>)
 8000660:	461a      	mov	r2, r3
 8000662:	0052      	lsls	r2, r2, #1
 8000664:	441a      	add	r2, r3
 8000666:	00d3      	lsls	r3, r2, #3
 8000668:	461a      	mov	r2, r3
 800066a:	460b      	mov	r3, r1
 800066c:	005b      	lsls	r3, r3, #1
 800066e:	440b      	add	r3, r1
 8000670:	019b      	lsls	r3, r3, #6
 8000672:	4413      	add	r3, r2
 8000674:	4403      	add	r3, r0
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	6818      	ldr	r0, [r3, #0]
 800067a:	79f9      	ldrb	r1, [r7, #7]
 800067c:	79bb      	ldrb	r3, [r7, #6]
 800067e:	4c47      	ldr	r4, [pc, #284]	; (800079c <DMA_ChannelParameters+0x590>)
 8000680:	461a      	mov	r2, r3
 8000682:	0052      	lsls	r2, r2, #1
 8000684:	441a      	add	r2, r3
 8000686:	00d3      	lsls	r3, r2, #3
 8000688:	461a      	mov	r2, r3
 800068a:	460b      	mov	r3, r1
 800068c:	005b      	lsls	r3, r3, #1
 800068e:	440b      	add	r3, r1
 8000690:	019b      	lsls	r3, r3, #6
 8000692:	4413      	add	r3, r2
 8000694:	4423      	add	r3, r4
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	f440 6280 	orr.w	r2, r0, #1024	; 0x400
 800069c:	601a      	str	r2, [r3, #0]

//   Bit 4 TCIE: Transfer complete interrupt enable
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 4);// 1: TC interrupt enabled
 800069e:	79f9      	ldrb	r1, [r7, #7]
 80006a0:	79bb      	ldrb	r3, [r7, #6]
 80006a2:	483e      	ldr	r0, [pc, #248]	; (800079c <DMA_ChannelParameters+0x590>)
 80006a4:	461a      	mov	r2, r3
 80006a6:	0052      	lsls	r2, r2, #1
 80006a8:	441a      	add	r2, r3
 80006aa:	00d3      	lsls	r3, r2, #3
 80006ac:	461a      	mov	r2, r3
 80006ae:	460b      	mov	r3, r1
 80006b0:	005b      	lsls	r3, r3, #1
 80006b2:	440b      	add	r3, r1
 80006b4:	019b      	lsls	r3, r3, #6
 80006b6:	4413      	add	r3, r2
 80006b8:	4403      	add	r3, r0
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	6818      	ldr	r0, [r3, #0]
 80006be:	79f9      	ldrb	r1, [r7, #7]
 80006c0:	79bb      	ldrb	r3, [r7, #6]
 80006c2:	4c36      	ldr	r4, [pc, #216]	; (800079c <DMA_ChannelParameters+0x590>)
 80006c4:	461a      	mov	r2, r3
 80006c6:	0052      	lsls	r2, r2, #1
 80006c8:	441a      	add	r2, r3
 80006ca:	00d3      	lsls	r3, r2, #3
 80006cc:	461a      	mov	r2, r3
 80006ce:	460b      	mov	r3, r1
 80006d0:	005b      	lsls	r3, r3, #1
 80006d2:	440b      	add	r3, r1
 80006d4:	019b      	lsls	r3, r3, #6
 80006d6:	4413      	add	r3, r2
 80006d8:	4423      	add	r3, r4
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	f040 0210 	orr.w	r2, r0, #16
 80006e0:	601a      	str	r2, [r3, #0]
// 	 Bit 2 TEIE: Transfer error interrupt enable
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 2);// 1: TE interrupt enabled
 80006e2:	79f9      	ldrb	r1, [r7, #7]
 80006e4:	79bb      	ldrb	r3, [r7, #6]
 80006e6:	482d      	ldr	r0, [pc, #180]	; (800079c <DMA_ChannelParameters+0x590>)
 80006e8:	461a      	mov	r2, r3
 80006ea:	0052      	lsls	r2, r2, #1
 80006ec:	441a      	add	r2, r3
 80006ee:	00d3      	lsls	r3, r2, #3
 80006f0:	461a      	mov	r2, r3
 80006f2:	460b      	mov	r3, r1
 80006f4:	005b      	lsls	r3, r3, #1
 80006f6:	440b      	add	r3, r1
 80006f8:	019b      	lsls	r3, r3, #6
 80006fa:	4413      	add	r3, r2
 80006fc:	4403      	add	r3, r0
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	6818      	ldr	r0, [r3, #0]
 8000702:	79f9      	ldrb	r1, [r7, #7]
 8000704:	79bb      	ldrb	r3, [r7, #6]
 8000706:	4c25      	ldr	r4, [pc, #148]	; (800079c <DMA_ChannelParameters+0x590>)
 8000708:	461a      	mov	r2, r3
 800070a:	0052      	lsls	r2, r2, #1
 800070c:	441a      	add	r2, r3
 800070e:	00d3      	lsls	r3, r2, #3
 8000710:	461a      	mov	r2, r3
 8000712:	460b      	mov	r3, r1
 8000714:	005b      	lsls	r3, r3, #1
 8000716:	440b      	add	r3, r1
 8000718:	019b      	lsls	r3, r3, #6
 800071a:	4413      	add	r3, r2
 800071c:	4423      	add	r3, r4
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	f040 0204 	orr.w	r2, r0, #4
 8000724:	601a      	str	r2, [r3, #0]

//	 DMA2_S0PAR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][2] = (unsigned int)Src_Add;
 8000726:	79f9      	ldrb	r1, [r7, #7]
 8000728:	79bb      	ldrb	r3, [r7, #6]
 800072a:	481c      	ldr	r0, [pc, #112]	; (800079c <DMA_ChannelParameters+0x590>)
 800072c:	461a      	mov	r2, r3
 800072e:	0052      	lsls	r2, r2, #1
 8000730:	441a      	add	r2, r3
 8000732:	00d3      	lsls	r3, r2, #3
 8000734:	461a      	mov	r2, r3
 8000736:	460b      	mov	r3, r1
 8000738:	005b      	lsls	r3, r3, #1
 800073a:	440b      	add	r3, r1
 800073c:	019b      	lsls	r3, r3, #6
 800073e:	4413      	add	r3, r2
 8000740:	4403      	add	r3, r0
 8000742:	3308      	adds	r3, #8
 8000744:	681b      	ldr	r3, [r3, #0]
 8000746:	683a      	ldr	r2, [r7, #0]
 8000748:	601a      	str	r2, [r3, #0]
//	 DMA2_S0M0AR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][3] = (unsigned int)Dest_Add;
 800074a:	79f9      	ldrb	r1, [r7, #7]
 800074c:	79bb      	ldrb	r3, [r7, #6]
 800074e:	4813      	ldr	r0, [pc, #76]	; (800079c <DMA_ChannelParameters+0x590>)
 8000750:	461a      	mov	r2, r3
 8000752:	0052      	lsls	r2, r2, #1
 8000754:	441a      	add	r2, r3
 8000756:	00d3      	lsls	r3, r2, #3
 8000758:	461a      	mov	r2, r3
 800075a:	460b      	mov	r3, r1
 800075c:	005b      	lsls	r3, r3, #1
 800075e:	440b      	add	r3, r1
 8000760:	019b      	lsls	r3, r3, #6
 8000762:	4413      	add	r3, r2
 8000764:	4403      	add	r3, r0
 8000766:	330c      	adds	r3, #12
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	69ba      	ldr	r2, [r7, #24]
 800076c:	601a      	str	r2, [r3, #0]
//	 DMA2_S0NDTR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][1] = NM_Of_Transfer;
 800076e:	79f9      	ldrb	r1, [r7, #7]
 8000770:	79bb      	ldrb	r3, [r7, #6]
 8000772:	480a      	ldr	r0, [pc, #40]	; (800079c <DMA_ChannelParameters+0x590>)
 8000774:	461a      	mov	r2, r3
 8000776:	0052      	lsls	r2, r2, #1
 8000778:	441a      	add	r2, r3
 800077a:	00d3      	lsls	r3, r2, #3
 800077c:	461a      	mov	r2, r3
 800077e:	460b      	mov	r3, r1
 8000780:	005b      	lsls	r3, r3, #1
 8000782:	440b      	add	r3, r1
 8000784:	019b      	lsls	r3, r3, #6
 8000786:	4413      	add	r3, r2
 8000788:	4403      	add	r3, r0
 800078a:	3304      	adds	r3, #4
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	69fa      	ldr	r2, [r7, #28]
 8000790:	601a      	str	r2, [r3, #0]
}
 8000792:	bf00      	nop
 8000794:	370c      	adds	r7, #12
 8000796:	46bd      	mov	sp, r7
 8000798:	bcb0      	pop	{r4, r5, r7}
 800079a:	4770      	bx	lr
 800079c:	20000000 	.word	0x20000000

080007a0 <DMA_Req_To_Start_Transfer>:

//Enabling Stream
void DMA_Req_To_Start_Transfer(unsigned char Peripheral_ID, unsigned char Stream_NM)
{
 80007a0:	b490      	push	{r4, r7}
 80007a2:	b082      	sub	sp, #8
 80007a4:	af00      	add	r7, sp, #0
 80007a6:	4603      	mov	r3, r0
 80007a8:	460a      	mov	r2, r1
 80007aa:	71fb      	strb	r3, [r7, #7]
 80007ac:	4613      	mov	r3, r2
 80007ae:	71bb      	strb	r3, [r7, #6]
//   Clear all Interrupt flags
	if(Stream_NM < (unsigned char)4)
 80007b0:	79bb      	ldrb	r3, [r7, #6]
 80007b2:	2b03      	cmp	r3, #3
 80007b4:	d817      	bhi.n	80007e6 <DMA_Req_To_Start_Transfer+0x46>
	{
		 *DMA_INTTERRUPT_LOOKUP[Peripheral_ID][2] |= (0x3D << ClearFlags[Stream_NM]);//DMA_LIFCR
 80007b6:	79fb      	ldrb	r3, [r7, #7]
 80007b8:	4a2a      	ldr	r2, [pc, #168]	; (8000864 <DMA_Req_To_Start_Transfer+0xc4>)
 80007ba:	011b      	lsls	r3, r3, #4
 80007bc:	4413      	add	r3, r2
 80007be:	3308      	adds	r3, #8
 80007c0:	681b      	ldr	r3, [r3, #0]
 80007c2:	681a      	ldr	r2, [r3, #0]
 80007c4:	79bb      	ldrb	r3, [r7, #6]
 80007c6:	4928      	ldr	r1, [pc, #160]	; (8000868 <DMA_Req_To_Start_Transfer+0xc8>)
 80007c8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80007cc:	213d      	movs	r1, #61	; 0x3d
 80007ce:	fa01 f303 	lsl.w	r3, r1, r3
 80007d2:	4618      	mov	r0, r3
 80007d4:	79fb      	ldrb	r3, [r7, #7]
 80007d6:	4923      	ldr	r1, [pc, #140]	; (8000864 <DMA_Req_To_Start_Transfer+0xc4>)
 80007d8:	011b      	lsls	r3, r3, #4
 80007da:	440b      	add	r3, r1
 80007dc:	3308      	adds	r3, #8
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	4302      	orrs	r2, r0
 80007e2:	601a      	str	r2, [r3, #0]
 80007e4:	e017      	b.n	8000816 <DMA_Req_To_Start_Transfer+0x76>
	}
	else
	{
		 *DMA_INTTERRUPT_LOOKUP[Peripheral_ID][3] |= (0x3D << ClearFlags[Stream_NM-4]);//DMA_HIFCR
 80007e6:	79fb      	ldrb	r3, [r7, #7]
 80007e8:	4a1e      	ldr	r2, [pc, #120]	; (8000864 <DMA_Req_To_Start_Transfer+0xc4>)
 80007ea:	011b      	lsls	r3, r3, #4
 80007ec:	4413      	add	r3, r2
 80007ee:	330c      	adds	r3, #12
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	681a      	ldr	r2, [r3, #0]
 80007f4:	79bb      	ldrb	r3, [r7, #6]
 80007f6:	3b04      	subs	r3, #4
 80007f8:	491b      	ldr	r1, [pc, #108]	; (8000868 <DMA_Req_To_Start_Transfer+0xc8>)
 80007fa:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80007fe:	213d      	movs	r1, #61	; 0x3d
 8000800:	fa01 f303 	lsl.w	r3, r1, r3
 8000804:	4618      	mov	r0, r3
 8000806:	79fb      	ldrb	r3, [r7, #7]
 8000808:	4916      	ldr	r1, [pc, #88]	; (8000864 <DMA_Req_To_Start_Transfer+0xc4>)
 800080a:	011b      	lsls	r3, r3, #4
 800080c:	440b      	add	r3, r1
 800080e:	330c      	adds	r3, #12
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	4302      	orrs	r2, r0
 8000814:	601a      	str	r2, [r3, #0]
	}

//	 DMA_SxCR Bit 0 EN
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 0);
 8000816:	79f9      	ldrb	r1, [r7, #7]
 8000818:	79bb      	ldrb	r3, [r7, #6]
 800081a:	4814      	ldr	r0, [pc, #80]	; (800086c <DMA_Req_To_Start_Transfer+0xcc>)
 800081c:	461a      	mov	r2, r3
 800081e:	0052      	lsls	r2, r2, #1
 8000820:	441a      	add	r2, r3
 8000822:	00d3      	lsls	r3, r2, #3
 8000824:	461a      	mov	r2, r3
 8000826:	460b      	mov	r3, r1
 8000828:	005b      	lsls	r3, r3, #1
 800082a:	440b      	add	r3, r1
 800082c:	019b      	lsls	r3, r3, #6
 800082e:	4413      	add	r3, r2
 8000830:	4403      	add	r3, r0
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	6818      	ldr	r0, [r3, #0]
 8000836:	79f9      	ldrb	r1, [r7, #7]
 8000838:	79bb      	ldrb	r3, [r7, #6]
 800083a:	4c0c      	ldr	r4, [pc, #48]	; (800086c <DMA_Req_To_Start_Transfer+0xcc>)
 800083c:	461a      	mov	r2, r3
 800083e:	0052      	lsls	r2, r2, #1
 8000840:	441a      	add	r2, r3
 8000842:	00d3      	lsls	r3, r2, #3
 8000844:	461a      	mov	r2, r3
 8000846:	460b      	mov	r3, r1
 8000848:	005b      	lsls	r3, r3, #1
 800084a:	440b      	add	r3, r1
 800084c:	019b      	lsls	r3, r3, #6
 800084e:	4413      	add	r3, r2
 8000850:	4423      	add	r3, r4
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	f040 0201 	orr.w	r2, r0, #1
 8000858:	601a      	str	r2, [r3, #0]
}
 800085a:	bf00      	nop
 800085c:	3708      	adds	r7, #8
 800085e:	46bd      	mov	sp, r7
 8000860:	bc90      	pop	{r4, r7}
 8000862:	4770      	bx	lr
 8000864:	20000180 	.word	0x20000180
 8000868:	200001a0 	.word	0x200001a0
 800086c:	20000000 	.word	0x20000000

08000870 <DMA_TransferState>:

unsigned char DMA_TransferState(void)
{
 8000870:	b480      	push	{r7}
 8000872:	af00      	add	r7, sp, #0
	if((*DMA2_LISR >> 5)&1) //check interrupt from TC
 8000874:	4b1b      	ldr	r3, [pc, #108]	; (80008e4 <DMA_TransferState+0x74>)
 8000876:	681b      	ldr	r3, [r3, #0]
 8000878:	f003 0320 	and.w	r3, r3, #32
 800087c:	2b00      	cmp	r3, #0
 800087e:	d003      	beq.n	8000888 <DMA_TransferState+0x18>
	{
		 State = TransferComplete;
 8000880:	4b19      	ldr	r3, [pc, #100]	; (80008e8 <DMA_TransferState+0x78>)
 8000882:	2205      	movs	r2, #5
 8000884:	701a      	strb	r2, [r3, #0]
 8000886:	e026      	b.n	80008d6 <DMA_TransferState+0x66>
	}
	else if((*DMA2_LISR >> 3)&1) //check interrupt from TE
 8000888:	4b16      	ldr	r3, [pc, #88]	; (80008e4 <DMA_TransferState+0x74>)
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	f003 0308 	and.w	r3, r3, #8
 8000890:	2b00      	cmp	r3, #0
 8000892:	d003      	beq.n	800089c <DMA_TransferState+0x2c>
	{
		 State = TransferErorr;
 8000894:	4b14      	ldr	r3, [pc, #80]	; (80008e8 <DMA_TransferState+0x78>)
 8000896:	2203      	movs	r2, #3
 8000898:	701a      	strb	r2, [r3, #0]
 800089a:	e01c      	b.n	80008d6 <DMA_TransferState+0x66>
	}
	else if((*DMA2_LISR >> 4)&1) //check interrupt from HT
 800089c:	4b11      	ldr	r3, [pc, #68]	; (80008e4 <DMA_TransferState+0x74>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	f003 0310 	and.w	r3, r3, #16
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	d003      	beq.n	80008b0 <DMA_TransferState+0x40>
	{
		 State = HalfTransfer;
 80008a8:	4b0f      	ldr	r3, [pc, #60]	; (80008e8 <DMA_TransferState+0x78>)
 80008aa:	2204      	movs	r2, #4
 80008ac:	701a      	strb	r2, [r3, #0]
 80008ae:	e012      	b.n	80008d6 <DMA_TransferState+0x66>
	}
	else if((*DMA2_LISR >> 2)&1) //check interrupt from DM
 80008b0:	4b0c      	ldr	r3, [pc, #48]	; (80008e4 <DMA_TransferState+0x74>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	f003 0304 	and.w	r3, r3, #4
 80008b8:	2b00      	cmp	r3, #0
 80008ba:	d003      	beq.n	80008c4 <DMA_TransferState+0x54>
	{
		 State = DirectModeErorr;
 80008bc:	4b0a      	ldr	r3, [pc, #40]	; (80008e8 <DMA_TransferState+0x78>)
 80008be:	2202      	movs	r2, #2
 80008c0:	701a      	strb	r2, [r3, #0]
 80008c2:	e008      	b.n	80008d6 <DMA_TransferState+0x66>
	}
	else if((*DMA2_LISR >> 0)&1) //check interrupt from FE
 80008c4:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <DMA_TransferState+0x74>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	f003 0301 	and.w	r3, r3, #1
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	d002      	beq.n	80008d6 <DMA_TransferState+0x66>
	{
		 State = FIFOErorr;
 80008d0:	4b05      	ldr	r3, [pc, #20]	; (80008e8 <DMA_TransferState+0x78>)
 80008d2:	2201      	movs	r2, #1
 80008d4:	701a      	strb	r2, [r3, #0]
	}
	return State;
 80008d6:	4b04      	ldr	r3, [pc, #16]	; (80008e8 <DMA_TransferState+0x78>)
 80008d8:	781b      	ldrb	r3, [r3, #0]
}
 80008da:	4618      	mov	r0, r3
 80008dc:	46bd      	mov	sp, r7
 80008de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e2:	4770      	bx	lr
 80008e4:	40026400 	.word	0x40026400
 80008e8:	200001f4 	.word	0x200001f4

080008ec <DMA_ISR>:

//ISR - A function to check the transfer complete complete
void DMA_ISR(void)
{
 80008ec:	b580      	push	{r7, lr}
 80008ee:	af00      	add	r7, sp, #0
	State = DMA_TransferState();
 80008f0:	f7ff ffbe 	bl	8000870 <DMA_TransferState>
 80008f4:	4603      	mov	r3, r0
 80008f6:	461a      	mov	r2, r3
 80008f8:	4b07      	ldr	r3, [pc, #28]	; (8000918 <DMA_ISR+0x2c>)
 80008fa:	701a      	strb	r2, [r3, #0]
	if(State == TransferComplete)
 80008fc:	4b06      	ldr	r3, [pc, #24]	; (8000918 <DMA_ISR+0x2c>)
 80008fe:	781b      	ldrb	r3, [r3, #0]
 8000900:	2b05      	cmp	r3, #5
 8000902:	d107      	bne.n	8000914 <DMA_ISR+0x28>
	{
	   Led_CallOut_Notification();
 8000904:	f000 f9bc 	bl	8000c80 <Led_CallOut_Notification>
//	 CTCIFx: Stream x clear transfer complete interrupt flag
	  *DMA2_LIFCR |= (0x01 << 5);
 8000908:	4b04      	ldr	r3, [pc, #16]	; (800091c <DMA_ISR+0x30>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	4a03      	ldr	r2, [pc, #12]	; (800091c <DMA_ISR+0x30>)
 800090e:	f043 0320 	orr.w	r3, r3, #32
 8000912:	6013      	str	r3, [r2, #0]
	}
}
 8000914:	bf00      	nop
 8000916:	bd80      	pop	{r7, pc}
 8000918:	200001f4 	.word	0x200001f4
 800091c:	40026408 	.word	0x40026408

08000920 <GPIO_EnableClock>:

unsigned int *LOOKUP[2][5] =
{{GPIOA_MODER, GPIOA_OTYPER, GPIOA_PUPDR, GPIOA_IDR, GPIOA_ODR},
 {GPIOB_MODER, GPIOB_OTYPER, GPIOB_PUPDR,  GPIOB_IDR, GPIOB_ODR}};

void GPIO_EnableClock(unsigned char PortID) {
 8000920:	b480      	push	{r7}
 8000922:	b083      	sub	sp, #12
 8000924:	af00      	add	r7, sp, #0
 8000926:	4603      	mov	r3, r0
 8000928:	71fb      	strb	r3, [r7, #7]
     *RCC_AHB1ENR |= (0x01 << PortID);
 800092a:	4b08      	ldr	r3, [pc, #32]	; (800094c <GPIO_EnableClock+0x2c>)
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	79fa      	ldrb	r2, [r7, #7]
 8000930:	2101      	movs	r1, #1
 8000932:	fa01 f202 	lsl.w	r2, r1, r2
 8000936:	4611      	mov	r1, r2
 8000938:	4a04      	ldr	r2, [pc, #16]	; (800094c <GPIO_EnableClock+0x2c>)
 800093a:	430b      	orrs	r3, r1
 800093c:	6013      	str	r3, [r2, #0]
}
 800093e:	bf00      	nop
 8000940:	370c      	adds	r7, #12
 8000942:	46bd      	mov	sp, r7
 8000944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000948:	4770      	bx	lr
 800094a:	bf00      	nop
 800094c:	40023830 	.word	0x40023830

08000950 <GPIO_Init>:

void GPIO_Init(unsigned char PortID, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState) {
 8000950:	b490      	push	{r4, r7}
 8000952:	b082      	sub	sp, #8
 8000954:	af00      	add	r7, sp, #0
 8000956:	4604      	mov	r4, r0
 8000958:	4608      	mov	r0, r1
 800095a:	4611      	mov	r1, r2
 800095c:	461a      	mov	r2, r3
 800095e:	4623      	mov	r3, r4
 8000960:	71fb      	strb	r3, [r7, #7]
 8000962:	4603      	mov	r3, r0
 8000964:	71bb      	strb	r3, [r7, #6]
 8000966:	460b      	mov	r3, r1
 8000968:	717b      	strb	r3, [r7, #5]
 800096a:	4613      	mov	r3, r2
 800096c:	713b      	strb	r3, [r7, #4]
               
      *LOOKUP[PortID][0] &= ~(0x03 << 2 * PinNum);
 800096e:	79fa      	ldrb	r2, [r7, #7]
 8000970:	4956      	ldr	r1, [pc, #344]	; (8000acc <GPIO_Init+0x17c>)
 8000972:	4613      	mov	r3, r2
 8000974:	009b      	lsls	r3, r3, #2
 8000976:	4413      	add	r3, r2
 8000978:	009b      	lsls	r3, r3, #2
 800097a:	440b      	add	r3, r1
 800097c:	681b      	ldr	r3, [r3, #0]
 800097e:	6819      	ldr	r1, [r3, #0]
 8000980:	79bb      	ldrb	r3, [r7, #6]
 8000982:	005b      	lsls	r3, r3, #1
 8000984:	2203      	movs	r2, #3
 8000986:	fa02 f303 	lsl.w	r3, r2, r3
 800098a:	43db      	mvns	r3, r3
 800098c:	461c      	mov	r4, r3
 800098e:	79fa      	ldrb	r2, [r7, #7]
 8000990:	484e      	ldr	r0, [pc, #312]	; (8000acc <GPIO_Init+0x17c>)
 8000992:	4613      	mov	r3, r2
 8000994:	009b      	lsls	r3, r3, #2
 8000996:	4413      	add	r3, r2
 8000998:	009b      	lsls	r3, r3, #2
 800099a:	4403      	add	r3, r0
 800099c:	681b      	ldr	r3, [r3, #0]
 800099e:	ea01 0204 	and.w	r2, r1, r4
 80009a2:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][0] |= PinMode << 2 * PinNum;
 80009a4:	79fa      	ldrb	r2, [r7, #7]
 80009a6:	4949      	ldr	r1, [pc, #292]	; (8000acc <GPIO_Init+0x17c>)
 80009a8:	4613      	mov	r3, r2
 80009aa:	009b      	lsls	r3, r3, #2
 80009ac:	4413      	add	r3, r2
 80009ae:	009b      	lsls	r3, r3, #2
 80009b0:	440b      	add	r3, r1
 80009b2:	681b      	ldr	r3, [r3, #0]
 80009b4:	6819      	ldr	r1, [r3, #0]
 80009b6:	797a      	ldrb	r2, [r7, #5]
 80009b8:	79bb      	ldrb	r3, [r7, #6]
 80009ba:	005b      	lsls	r3, r3, #1
 80009bc:	fa02 f303 	lsl.w	r3, r2, r3
 80009c0:	461c      	mov	r4, r3
 80009c2:	79fa      	ldrb	r2, [r7, #7]
 80009c4:	4841      	ldr	r0, [pc, #260]	; (8000acc <GPIO_Init+0x17c>)
 80009c6:	4613      	mov	r3, r2
 80009c8:	009b      	lsls	r3, r3, #2
 80009ca:	4413      	add	r3, r2
 80009cc:	009b      	lsls	r3, r3, #2
 80009ce:	4403      	add	r3, r0
 80009d0:	681b      	ldr	r3, [r3, #0]
 80009d2:	ea41 0204 	orr.w	r2, r1, r4
 80009d6:	601a      	str	r2, [r3, #0]

      *LOOKUP[PortID][1] &= ~(1 << PinNum);
 80009d8:	79fa      	ldrb	r2, [r7, #7]
 80009da:	493c      	ldr	r1, [pc, #240]	; (8000acc <GPIO_Init+0x17c>)
 80009dc:	4613      	mov	r3, r2
 80009de:	009b      	lsls	r3, r3, #2
 80009e0:	4413      	add	r3, r2
 80009e2:	009b      	lsls	r3, r3, #2
 80009e4:	440b      	add	r3, r1
 80009e6:	3304      	adds	r3, #4
 80009e8:	681b      	ldr	r3, [r3, #0]
 80009ea:	6819      	ldr	r1, [r3, #0]
 80009ec:	79bb      	ldrb	r3, [r7, #6]
 80009ee:	2201      	movs	r2, #1
 80009f0:	fa02 f303 	lsl.w	r3, r2, r3
 80009f4:	43db      	mvns	r3, r3
 80009f6:	461c      	mov	r4, r3
 80009f8:	79fa      	ldrb	r2, [r7, #7]
 80009fa:	4834      	ldr	r0, [pc, #208]	; (8000acc <GPIO_Init+0x17c>)
 80009fc:	4613      	mov	r3, r2
 80009fe:	009b      	lsls	r3, r3, #2
 8000a00:	4413      	add	r3, r2
 8000a02:	009b      	lsls	r3, r3, #2
 8000a04:	4403      	add	r3, r0
 8000a06:	3304      	adds	r3, #4
 8000a08:	681b      	ldr	r3, [r3, #0]
 8000a0a:	ea01 0204 	and.w	r2, r1, r4
 8000a0e:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 8000a10:	79fa      	ldrb	r2, [r7, #7]
 8000a12:	492e      	ldr	r1, [pc, #184]	; (8000acc <GPIO_Init+0x17c>)
 8000a14:	4613      	mov	r3, r2
 8000a16:	009b      	lsls	r3, r3, #2
 8000a18:	4413      	add	r3, r2
 8000a1a:	009b      	lsls	r3, r3, #2
 8000a1c:	440b      	add	r3, r1
 8000a1e:	3304      	adds	r3, #4
 8000a20:	681b      	ldr	r3, [r3, #0]
 8000a22:	6819      	ldr	r1, [r3, #0]
 8000a24:	793b      	ldrb	r3, [r7, #4]
 8000a26:	f003 0201 	and.w	r2, r3, #1
 8000a2a:	79bb      	ldrb	r3, [r7, #6]
 8000a2c:	fa02 f303 	lsl.w	r3, r2, r3
 8000a30:	461c      	mov	r4, r3
 8000a32:	79fa      	ldrb	r2, [r7, #7]
 8000a34:	4825      	ldr	r0, [pc, #148]	; (8000acc <GPIO_Init+0x17c>)
 8000a36:	4613      	mov	r3, r2
 8000a38:	009b      	lsls	r3, r3, #2
 8000a3a:	4413      	add	r3, r2
 8000a3c:	009b      	lsls	r3, r3, #2
 8000a3e:	4403      	add	r3, r0
 8000a40:	3304      	adds	r3, #4
 8000a42:	681b      	ldr	r3, [r3, #0]
 8000a44:	ea41 0204 	orr.w	r2, r1, r4
 8000a48:	601a      	str	r2, [r3, #0]

      *LOOKUP[PortID][2] &= ~(0x03 << 2 * PinNum);
 8000a4a:	79fa      	ldrb	r2, [r7, #7]
 8000a4c:	491f      	ldr	r1, [pc, #124]	; (8000acc <GPIO_Init+0x17c>)
 8000a4e:	4613      	mov	r3, r2
 8000a50:	009b      	lsls	r3, r3, #2
 8000a52:	4413      	add	r3, r2
 8000a54:	009b      	lsls	r3, r3, #2
 8000a56:	440b      	add	r3, r1
 8000a58:	3308      	adds	r3, #8
 8000a5a:	681b      	ldr	r3, [r3, #0]
 8000a5c:	6819      	ldr	r1, [r3, #0]
 8000a5e:	79bb      	ldrb	r3, [r7, #6]
 8000a60:	005b      	lsls	r3, r3, #1
 8000a62:	2203      	movs	r2, #3
 8000a64:	fa02 f303 	lsl.w	r3, r2, r3
 8000a68:	43db      	mvns	r3, r3
 8000a6a:	461c      	mov	r4, r3
 8000a6c:	79fa      	ldrb	r2, [r7, #7]
 8000a6e:	4817      	ldr	r0, [pc, #92]	; (8000acc <GPIO_Init+0x17c>)
 8000a70:	4613      	mov	r3, r2
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	4413      	add	r3, r2
 8000a76:	009b      	lsls	r3, r3, #2
 8000a78:	4403      	add	r3, r0
 8000a7a:	3308      	adds	r3, #8
 8000a7c:	681b      	ldr	r3, [r3, #0]
 8000a7e:	ea01 0204 	and.w	r2, r1, r4
 8000a82:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][2] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum); 
 8000a84:	79fa      	ldrb	r2, [r7, #7]
 8000a86:	4911      	ldr	r1, [pc, #68]	; (8000acc <GPIO_Init+0x17c>)
 8000a88:	4613      	mov	r3, r2
 8000a8a:	009b      	lsls	r3, r3, #2
 8000a8c:	4413      	add	r3, r2
 8000a8e:	009b      	lsls	r3, r3, #2
 8000a90:	440b      	add	r3, r1
 8000a92:	3308      	adds	r3, #8
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	6819      	ldr	r1, [r3, #0]
 8000a98:	793b      	ldrb	r3, [r7, #4]
 8000a9a:	105b      	asrs	r3, r3, #1
 8000a9c:	f003 0203 	and.w	r2, r3, #3
 8000aa0:	79bb      	ldrb	r3, [r7, #6]
 8000aa2:	005b      	lsls	r3, r3, #1
 8000aa4:	fa02 f303 	lsl.w	r3, r2, r3
 8000aa8:	461c      	mov	r4, r3
 8000aaa:	79fa      	ldrb	r2, [r7, #7]
 8000aac:	4807      	ldr	r0, [pc, #28]	; (8000acc <GPIO_Init+0x17c>)
 8000aae:	4613      	mov	r3, r2
 8000ab0:	009b      	lsls	r3, r3, #2
 8000ab2:	4413      	add	r3, r2
 8000ab4:	009b      	lsls	r3, r3, #2
 8000ab6:	4403      	add	r3, r0
 8000ab8:	3308      	adds	r3, #8
 8000aba:	681b      	ldr	r3, [r3, #0]
 8000abc:	ea41 0204 	orr.w	r2, r1, r4
 8000ac0:	601a      	str	r2, [r3, #0]
}
 8000ac2:	bf00      	nop
 8000ac4:	3708      	adds	r7, #8
 8000ac6:	46bd      	mov	sp, r7
 8000ac8:	bc90      	pop	{r4, r7}
 8000aca:	4770      	bx	lr
 8000acc:	200001b0 	.word	0x200001b0

08000ad0 <GPIO_WritePin>:

unsigned char GPIO_WritePin(unsigned char PortID, unsigned char PinNum,
                            unsigned char Data) {
 8000ad0:	b490      	push	{r4, r7}
 8000ad2:	b084      	sub	sp, #16
 8000ad4:	af00      	add	r7, sp, #0
 8000ad6:	4603      	mov	r3, r0
 8000ad8:	71fb      	strb	r3, [r7, #7]
 8000ada:	460b      	mov	r3, r1
 8000adc:	71bb      	strb	r3, [r7, #6]
 8000ade:	4613      	mov	r3, r2
 8000ae0:	717b      	strb	r3, [r7, #5]
  unsigned char result;
     if (((*LOOKUP[PortID][0] & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1) {
 8000ae2:	79fa      	ldrb	r2, [r7, #7]
 8000ae4:	492c      	ldr	r1, [pc, #176]	; (8000b98 <GPIO_WritePin+0xc8>)
 8000ae6:	4613      	mov	r3, r2
 8000ae8:	009b      	lsls	r3, r3, #2
 8000aea:	4413      	add	r3, r2
 8000aec:	009b      	lsls	r3, r3, #2
 8000aee:	440b      	add	r3, r1
 8000af0:	681b      	ldr	r3, [r3, #0]
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	79ba      	ldrb	r2, [r7, #6]
 8000af6:	0052      	lsls	r2, r2, #1
 8000af8:	2103      	movs	r1, #3
 8000afa:	fa01 f202 	lsl.w	r2, r1, r2
 8000afe:	401a      	ands	r2, r3
 8000b00:	79bb      	ldrb	r3, [r7, #6]
 8000b02:	005b      	lsls	r3, r3, #1
 8000b04:	fa22 f303 	lsr.w	r3, r2, r3
 8000b08:	2b01      	cmp	r3, #1
 8000b0a:	d13d      	bne.n	8000b88 <GPIO_WritePin+0xb8>
        if (Data) {
 8000b0c:	797b      	ldrb	r3, [r7, #5]
 8000b0e:	2b00      	cmp	r3, #0
 8000b10:	d01b      	beq.n	8000b4a <GPIO_WritePin+0x7a>
          *LOOKUP[PortID][4] |= (1 << PinNum);
 8000b12:	79fa      	ldrb	r2, [r7, #7]
 8000b14:	4920      	ldr	r1, [pc, #128]	; (8000b98 <GPIO_WritePin+0xc8>)
 8000b16:	4613      	mov	r3, r2
 8000b18:	009b      	lsls	r3, r3, #2
 8000b1a:	4413      	add	r3, r2
 8000b1c:	009b      	lsls	r3, r3, #2
 8000b1e:	440b      	add	r3, r1
 8000b20:	3310      	adds	r3, #16
 8000b22:	681b      	ldr	r3, [r3, #0]
 8000b24:	6819      	ldr	r1, [r3, #0]
 8000b26:	79bb      	ldrb	r3, [r7, #6]
 8000b28:	2201      	movs	r2, #1
 8000b2a:	fa02 f303 	lsl.w	r3, r2, r3
 8000b2e:	461c      	mov	r4, r3
 8000b30:	79fa      	ldrb	r2, [r7, #7]
 8000b32:	4819      	ldr	r0, [pc, #100]	; (8000b98 <GPIO_WritePin+0xc8>)
 8000b34:	4613      	mov	r3, r2
 8000b36:	009b      	lsls	r3, r3, #2
 8000b38:	4413      	add	r3, r2
 8000b3a:	009b      	lsls	r3, r3, #2
 8000b3c:	4403      	add	r3, r0
 8000b3e:	3310      	adds	r3, #16
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	ea41 0204 	orr.w	r2, r1, r4
 8000b46:	601a      	str	r2, [r3, #0]
 8000b48:	e01b      	b.n	8000b82 <GPIO_WritePin+0xb2>
        } else {
          *LOOKUP[PortID][4] &= ~(1 << PinNum);
 8000b4a:	79fa      	ldrb	r2, [r7, #7]
 8000b4c:	4912      	ldr	r1, [pc, #72]	; (8000b98 <GPIO_WritePin+0xc8>)
 8000b4e:	4613      	mov	r3, r2
 8000b50:	009b      	lsls	r3, r3, #2
 8000b52:	4413      	add	r3, r2
 8000b54:	009b      	lsls	r3, r3, #2
 8000b56:	440b      	add	r3, r1
 8000b58:	3310      	adds	r3, #16
 8000b5a:	681b      	ldr	r3, [r3, #0]
 8000b5c:	6819      	ldr	r1, [r3, #0]
 8000b5e:	79bb      	ldrb	r3, [r7, #6]
 8000b60:	2201      	movs	r2, #1
 8000b62:	fa02 f303 	lsl.w	r3, r2, r3
 8000b66:	43db      	mvns	r3, r3
 8000b68:	461c      	mov	r4, r3
 8000b6a:	79fa      	ldrb	r2, [r7, #7]
 8000b6c:	480a      	ldr	r0, [pc, #40]	; (8000b98 <GPIO_WritePin+0xc8>)
 8000b6e:	4613      	mov	r3, r2
 8000b70:	009b      	lsls	r3, r3, #2
 8000b72:	4413      	add	r3, r2
 8000b74:	009b      	lsls	r3, r3, #2
 8000b76:	4403      	add	r3, r0
 8000b78:	3310      	adds	r3, #16
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	ea01 0204 	and.w	r2, r1, r4
 8000b80:	601a      	str	r2, [r3, #0]
        }
        result = OK;
 8000b82:	2300      	movs	r3, #0
 8000b84:	73fb      	strb	r3, [r7, #15]
 8000b86:	e001      	b.n	8000b8c <GPIO_WritePin+0xbc>
      } else {
        result = NOK;
 8000b88:	2301      	movs	r3, #1
 8000b8a:	73fb      	strb	r3, [r7, #15]
      }

  return result;
 8000b8c:	7bfb      	ldrb	r3, [r7, #15]
}
 8000b8e:	4618      	mov	r0, r3
 8000b90:	3710      	adds	r7, #16
 8000b92:	46bd      	mov	sp, r7
 8000b94:	bc90      	pop	{r4, r7}
 8000b96:	4770      	bx	lr
 8000b98:	200001b0 	.word	0x200001b0

08000b9c <NVIC_Controller>:
    *EXTI_FTSR |= 1 << PIN;

}

void NVIC_Controller(unsigned char Peripheral_ID,unsigned char Stream_NM)
{
 8000b9c:	b480      	push	{r7}
 8000b9e:	b083      	sub	sp, #12
 8000ba0:	af00      	add	r7, sp, #0
 8000ba2:	4603      	mov	r3, r0
 8000ba4:	460a      	mov	r2, r1
 8000ba6:	71fb      	strb	r3, [r7, #7]
 8000ba8:	4613      	mov	r3, r2
 8000baa:	71bb      	strb	r3, [r7, #6]
//	 *NVIC_ISER0 = 1 << (6+PIN);
	if(Peripheral_ID == 0)
 8000bac:	79fb      	ldrb	r3, [r7, #7]
 8000bae:	2b00      	cmp	r3, #0
 8000bb0:	d106      	bne.n	8000bc0 <NVIC_Controller+0x24>
	{
		*NVIC_ISER0 = 1 << (11+ Stream_NM);//DMA_1
 8000bb2:	79bb      	ldrb	r3, [r7, #6]
 8000bb4:	330b      	adds	r3, #11
 8000bb6:	2201      	movs	r2, #1
 8000bb8:	409a      	lsls	r2, r3
 8000bba:	4b09      	ldr	r3, [pc, #36]	; (8000be0 <NVIC_Controller+0x44>)
 8000bbc:	601a      	str	r2, [r3, #0]
	{
		*NVIC_ISER1 = 1 << (24 + Stream_NM);//DMA_2
	}


}
 8000bbe:	e008      	b.n	8000bd2 <NVIC_Controller+0x36>
	else if(Peripheral_ID == 1)
 8000bc0:	79fb      	ldrb	r3, [r7, #7]
 8000bc2:	2b01      	cmp	r3, #1
 8000bc4:	d105      	bne.n	8000bd2 <NVIC_Controller+0x36>
		*NVIC_ISER1 = 1 << (24 + Stream_NM);//DMA_2
 8000bc6:	79bb      	ldrb	r3, [r7, #6]
 8000bc8:	3318      	adds	r3, #24
 8000bca:	2201      	movs	r2, #1
 8000bcc:	409a      	lsls	r2, r3
 8000bce:	4b05      	ldr	r3, [pc, #20]	; (8000be4 <NVIC_Controller+0x48>)
 8000bd0:	601a      	str	r2, [r3, #0]
}
 8000bd2:	bf00      	nop
 8000bd4:	370c      	adds	r7, #12
 8000bd6:	46bd      	mov	sp, r7
 8000bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bdc:	4770      	bx	lr
 8000bde:	bf00      	nop
 8000be0:	e000e100 	.word	0xe000e100
 8000be4:	e000e104 	.word	0xe000e104

08000be8 <main>:
unsigned int DEST_Arr[BUF_SIZE];

void Led_CallOut_Notification(void);

int main(void)
{
 8000be8:	b580      	push	{r7, lr}
 8000bea:	b088      	sub	sp, #32
 8000bec:	af06      	add	r7, sp, #24
	for(unsigned int i=0; i<BUF_SIZE; i++)
 8000bee:	2300      	movs	r3, #0
 8000bf0:	607b      	str	r3, [r7, #4]
 8000bf2:	e010      	b.n	8000c16 <main+0x2e>
	{
		SCR_Arr[i]  = 100*(i+1);
 8000bf4:	687b      	ldr	r3, [r7, #4]
 8000bf6:	3301      	adds	r3, #1
 8000bf8:	2264      	movs	r2, #100	; 0x64
 8000bfa:	fb02 f203 	mul.w	r2, r2, r3
 8000bfe:	491e      	ldr	r1, [pc, #120]	; (8000c78 <main+0x90>)
 8000c00:	687b      	ldr	r3, [r7, #4]
 8000c02:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		DEST_Arr[i] = 0;
 8000c06:	4a1d      	ldr	r2, [pc, #116]	; (8000c7c <main+0x94>)
 8000c08:	687b      	ldr	r3, [r7, #4]
 8000c0a:	2100      	movs	r1, #0
 8000c0c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(unsigned int i=0; i<BUF_SIZE; i++)
 8000c10:	687b      	ldr	r3, [r7, #4]
 8000c12:	3301      	adds	r3, #1
 8000c14:	607b      	str	r3, [r7, #4]
 8000c16:	687b      	ldr	r3, [r7, #4]
 8000c18:	2b63      	cmp	r3, #99	; 0x63
 8000c1a:	d9eb      	bls.n	8000bf4 <main+0xc>
	}

	GPIO_EnableClock(0);  // Enable GPIOA
 8000c1c:	2000      	movs	r0, #0
 8000c1e:	f7ff fe7f 	bl	8000920 <GPIO_EnableClock>
	GPIO_Init(0, 0, OUTPUT, PUSH_PULL); //Red Led
 8000c22:	2300      	movs	r3, #0
 8000c24:	2201      	movs	r2, #1
 8000c26:	2100      	movs	r1, #0
 8000c28:	2000      	movs	r0, #0
 8000c2a:	f7ff fe91 	bl	8000950 <GPIO_Init>
	GPIO_Init(0, 2, OUTPUT, PUSH_PULL); //Green Led
 8000c2e:	2300      	movs	r3, #0
 8000c30:	2201      	movs	r2, #1
 8000c32:	2102      	movs	r1, #2
 8000c34:	2000      	movs	r0, #0
 8000c36:	f7ff fe8b 	bl	8000950 <GPIO_Init>

	DMA_Init(DMA_2, Stream_0);
 8000c3a:	2100      	movs	r1, #0
 8000c3c:	2001      	movs	r0, #1
 8000c3e:	f7ff fac9 	bl	80001d4 <DMA_Init>
	DMA_ChannelParameters(DMA_2, Stream_0, Software, SCR_Arr, DEST_Arr, BUF_SIZE, M2M,  Word, FIFO, Brust_4);
 8000c42:	2301      	movs	r3, #1
 8000c44:	9305      	str	r3, [sp, #20]
 8000c46:	2301      	movs	r3, #1
 8000c48:	9304      	str	r3, [sp, #16]
 8000c4a:	2302      	movs	r3, #2
 8000c4c:	9303      	str	r3, [sp, #12]
 8000c4e:	2302      	movs	r3, #2
 8000c50:	9302      	str	r3, [sp, #8]
 8000c52:	2364      	movs	r3, #100	; 0x64
 8000c54:	9301      	str	r3, [sp, #4]
 8000c56:	4b09      	ldr	r3, [pc, #36]	; (8000c7c <main+0x94>)
 8000c58:	9300      	str	r3, [sp, #0]
 8000c5a:	4b07      	ldr	r3, [pc, #28]	; (8000c78 <main+0x90>)
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	2100      	movs	r1, #0
 8000c60:	2001      	movs	r0, #1
 8000c62:	f7ff fad3 	bl	800020c <DMA_ChannelParameters>

	NVIC_Controller(DMA_2, Stream_0);
 8000c66:	2100      	movs	r1, #0
 8000c68:	2001      	movs	r0, #1
 8000c6a:	f7ff ff97 	bl	8000b9c <NVIC_Controller>
	DMA_Req_To_Start_Transfer(DMA_2, Stream_0);
 8000c6e:	2100      	movs	r1, #0
 8000c70:	2001      	movs	r0, #1
 8000c72:	f7ff fd95 	bl	80007a0 <DMA_Req_To_Start_Transfer>

    while (1){}
 8000c76:	e7fe      	b.n	8000c76 <main+0x8e>
 8000c78:	200001f8 	.word	0x200001f8
 8000c7c:	20000388 	.word	0x20000388

08000c80 <Led_CallOut_Notification>:
    return 0;
}

void Led_CallOut_Notification()
{
 8000c80:	b580      	push	{r7, lr}
 8000c82:	af00      	add	r7, sp, #0
	if((SCR_Arr[0] == DEST_Arr[0]) && (SCR_Arr[99] == DEST_Arr[99]))
 8000c84:	4b12      	ldr	r3, [pc, #72]	; (8000cd0 <Led_CallOut_Notification+0x50>)
 8000c86:	681a      	ldr	r2, [r3, #0]
 8000c88:	4b12      	ldr	r3, [pc, #72]	; (8000cd4 <Led_CallOut_Notification+0x54>)
 8000c8a:	681b      	ldr	r3, [r3, #0]
 8000c8c:	429a      	cmp	r2, r3
 8000c8e:	d112      	bne.n	8000cb6 <Led_CallOut_Notification+0x36>
 8000c90:	4b0f      	ldr	r3, [pc, #60]	; (8000cd0 <Led_CallOut_Notification+0x50>)
 8000c92:	f8d3 218c 	ldr.w	r2, [r3, #396]	; 0x18c
 8000c96:	4b0f      	ldr	r3, [pc, #60]	; (8000cd4 <Led_CallOut_Notification+0x54>)
 8000c98:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8000c9c:	429a      	cmp	r2, r3
 8000c9e:	d10a      	bne.n	8000cb6 <Led_CallOut_Notification+0x36>
	{
		GPIO_WritePin(0, 0, 0); //Red Led
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	2100      	movs	r1, #0
 8000ca4:	2000      	movs	r0, #0
 8000ca6:	f7ff ff13 	bl	8000ad0 <GPIO_WritePin>
		GPIO_WritePin(0, 2, 1); //Green Led
 8000caa:	2201      	movs	r2, #1
 8000cac:	2102      	movs	r1, #2
 8000cae:	2000      	movs	r0, #0
 8000cb0:	f7ff ff0e 	bl	8000ad0 <GPIO_WritePin>
 8000cb4:	e00a      	b.n	8000ccc <Led_CallOut_Notification+0x4c>
	}
	else{
		GPIO_WritePin(0, 0, 1); //Red Led
 8000cb6:	2201      	movs	r2, #1
 8000cb8:	2100      	movs	r1, #0
 8000cba:	2000      	movs	r0, #0
 8000cbc:	f7ff ff08 	bl	8000ad0 <GPIO_WritePin>
		GPIO_WritePin(0, 2, 0); //Green Led
 8000cc0:	2200      	movs	r2, #0
 8000cc2:	2102      	movs	r1, #2
 8000cc4:	2000      	movs	r0, #0
 8000cc6:	f7ff ff03 	bl	8000ad0 <GPIO_WritePin>
	}
}
 8000cca:	bf00      	nop
 8000ccc:	bf00      	nop
 8000cce:	bd80      	pop	{r7, pc}
 8000cd0:	200001f8 	.word	0x200001f8
 8000cd4:	20000388 	.word	0x20000388

08000cd8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000cd8:	b480      	push	{r7}
 8000cda:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000cdc:	4b06      	ldr	r3, [pc, #24]	; (8000cf8 <SystemInit+0x20>)
 8000cde:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000ce2:	4a05      	ldr	r2, [pc, #20]	; (8000cf8 <SystemInit+0x20>)
 8000ce4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000ce8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000cec:	bf00      	nop
 8000cee:	46bd      	mov	sp, r7
 8000cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cf4:	4770      	bx	lr
 8000cf6:	bf00      	nop
 8000cf8:	e000ed00 	.word	0xe000ed00

08000cfc <Reset_Handler>:
 8000cfc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000d34 <LoopFillZerobss+0x12>
 8000d00:	480d      	ldr	r0, [pc, #52]	; (8000d38 <LoopFillZerobss+0x16>)
 8000d02:	490e      	ldr	r1, [pc, #56]	; (8000d3c <LoopFillZerobss+0x1a>)
 8000d04:	4a0e      	ldr	r2, [pc, #56]	; (8000d40 <LoopFillZerobss+0x1e>)
 8000d06:	2300      	movs	r3, #0
 8000d08:	e002      	b.n	8000d10 <LoopCopyDataInit>

08000d0a <CopyDataInit>:
 8000d0a:	58d4      	ldr	r4, [r2, r3]
 8000d0c:	50c4      	str	r4, [r0, r3]
 8000d0e:	3304      	adds	r3, #4

08000d10 <LoopCopyDataInit>:
 8000d10:	18c4      	adds	r4, r0, r3
 8000d12:	428c      	cmp	r4, r1
 8000d14:	d3f9      	bcc.n	8000d0a <CopyDataInit>
 8000d16:	4a0b      	ldr	r2, [pc, #44]	; (8000d44 <LoopFillZerobss+0x22>)
 8000d18:	4c0b      	ldr	r4, [pc, #44]	; (8000d48 <LoopFillZerobss+0x26>)
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	e001      	b.n	8000d22 <LoopFillZerobss>

08000d1e <FillZerobss>:
 8000d1e:	6013      	str	r3, [r2, #0]
 8000d20:	3204      	adds	r2, #4

08000d22 <LoopFillZerobss>:
 8000d22:	42a2      	cmp	r2, r4
 8000d24:	d3fb      	bcc.n	8000d1e <FillZerobss>
 8000d26:	f7ff ffd7 	bl	8000cd8 <SystemInit>
 8000d2a:	f000 f811 	bl	8000d50 <__libc_init_array>
 8000d2e:	f7ff ff5b 	bl	8000be8 <main>
 8000d32:	4770      	bx	lr
 8000d34:	20010000 	.word	0x20010000
 8000d38:	20000000 	.word	0x20000000
 8000d3c:	200001d8 	.word	0x200001d8
 8000d40:	08000db8 	.word	0x08000db8
 8000d44:	200001d8 	.word	0x200001d8
 8000d48:	20000518 	.word	0x20000518

08000d4c <ADC_IRQHandler>:
 8000d4c:	e7fe      	b.n	8000d4c <ADC_IRQHandler>
	...

08000d50 <__libc_init_array>:
 8000d50:	b570      	push	{r4, r5, r6, lr}
 8000d52:	4d0d      	ldr	r5, [pc, #52]	; (8000d88 <__libc_init_array+0x38>)
 8000d54:	4c0d      	ldr	r4, [pc, #52]	; (8000d8c <__libc_init_array+0x3c>)
 8000d56:	1b64      	subs	r4, r4, r5
 8000d58:	10a4      	asrs	r4, r4, #2
 8000d5a:	2600      	movs	r6, #0
 8000d5c:	42a6      	cmp	r6, r4
 8000d5e:	d109      	bne.n	8000d74 <__libc_init_array+0x24>
 8000d60:	4d0b      	ldr	r5, [pc, #44]	; (8000d90 <__libc_init_array+0x40>)
 8000d62:	4c0c      	ldr	r4, [pc, #48]	; (8000d94 <__libc_init_array+0x44>)
 8000d64:	f000 f818 	bl	8000d98 <_init>
 8000d68:	1b64      	subs	r4, r4, r5
 8000d6a:	10a4      	asrs	r4, r4, #2
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	42a6      	cmp	r6, r4
 8000d70:	d105      	bne.n	8000d7e <__libc_init_array+0x2e>
 8000d72:	bd70      	pop	{r4, r5, r6, pc}
 8000d74:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d78:	4798      	blx	r3
 8000d7a:	3601      	adds	r6, #1
 8000d7c:	e7ee      	b.n	8000d5c <__libc_init_array+0xc>
 8000d7e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d82:	4798      	blx	r3
 8000d84:	3601      	adds	r6, #1
 8000d86:	e7f2      	b.n	8000d6e <__libc_init_array+0x1e>
 8000d88:	08000db0 	.word	0x08000db0
 8000d8c:	08000db0 	.word	0x08000db0
 8000d90:	08000db0 	.word	0x08000db0
 8000d94:	08000db4 	.word	0x08000db4

08000d98 <_init>:
 8000d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d9a:	bf00      	nop
 8000d9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d9e:	bc08      	pop	{r3}
 8000da0:	469e      	mov	lr, r3
 8000da2:	4770      	bx	lr

08000da4 <_fini>:
 8000da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da6:	bf00      	nop
 8000da8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000daa:	bc08      	pop	{r3}
 8000dac:	469e      	mov	lr, r3
 8000dae:	4770      	bx	lr
