
project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000ad0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000c64  08000c64  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000c64  08000c64  000201c8  2**0
                  CONTENTS
  4 .ARM          00000000  08000c64  08000c64  000201c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000c64  08000c64  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000c64  08000c64  00010c64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000c68  08000c68  00010c68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001c8  20000000  08000c6c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000033c  200001c8  08000e34  000201c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000504  08000e34  00020504  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000dab  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000052e  00000000  00000000  00020fa3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  000214d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000c0  00000000  00000000  000215f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000e627  00000000  00000000  000216b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001a5c  00000000  00000000  0002fcd7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00051223  00000000  00000000  00031733  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00082956  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002b4  00000000  00000000  000829ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	200001c8 	.word	0x200001c8
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000c4c 	.word	0x08000c4c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	200001cc 	.word	0x200001cc
 80001d0:	08000c4c 	.word	0x08000c4c

080001d4 <DMA_Init>:
unsigned int *DMA_INTTERRUPT_LOOKUP[2][4] = {{DMA1_LISR, DMA1_HISR, DMA1_LIFCR, DMA1_HIFCR},
                                            {DMA2_LISR, DMA2_HISR, DMA2_LIFCR, DMA2_HIFCR}};


void DMA_Init(unsigned char Peripheral_ID, unsigned char Stream_NM)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	460a      	mov	r2, r1
 80001de:	71fb      	strb	r3, [r7, #7]
 80001e0:	4613      	mov	r3, r2
 80001e2:	71bb      	strb	r3, [r7, #6]
	*RCC_AHB1ENR |= (0x01 << ( Peripheral_ID + (unsigned char)21 ));//	 DMAEN
 80001e4:	4b08      	ldr	r3, [pc, #32]	; (8000208 <DMA_Init+0x34>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	79fa      	ldrb	r2, [r7, #7]
 80001ea:	3215      	adds	r2, #21
 80001ec:	2101      	movs	r1, #1
 80001ee:	fa01 f202 	lsl.w	r2, r1, r2
 80001f2:	4611      	mov	r1, r2
 80001f4:	4a04      	ldr	r2, [pc, #16]	; (8000208 <DMA_Init+0x34>)
 80001f6:	430b      	orrs	r3, r1
 80001f8:	6013      	str	r3, [r2, #0]
}
 80001fa:	bf00      	nop
 80001fc:	370c      	adds	r7, #12
 80001fe:	46bd      	mov	sp, r7
 8000200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000204:	4770      	bx	lr
 8000206:	bf00      	nop
 8000208:	40023830 	.word	0x40023830

0800020c <DMA_ChannelParameters>:

//A function to initialize the DMA channel parameters
void DMA_ChannelParameters(unsigned char Peripheral_ID, unsigned char Stream_NM,
		unsigned char Trigger_Src, unsigned int * Src_Add, unsigned int * Dest_Add, unsigned int NM_Of_Transfer,
		unsigned int Item_Size, unsigned char Mode, unsigned int Transfer_Type)
{
 800020c:	b4b0      	push	{r4, r5, r7}
 800020e:	b083      	sub	sp, #12
 8000210:	af00      	add	r7, sp, #0
 8000212:	603b      	str	r3, [r7, #0]
 8000214:	4603      	mov	r3, r0
 8000216:	71fb      	strb	r3, [r7, #7]
 8000218:	460b      	mov	r3, r1
 800021a:	71bb      	strb	r3, [r7, #6]
 800021c:	4613      	mov	r3, r2
 800021e:	717b      	strb	r3, [r7, #5]
	//	Clear  DMA_SxCR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] &= ~(0xff << 0);
 8000220:	79f9      	ldrb	r1, [r7, #7]
 8000222:	79bb      	ldrb	r3, [r7, #6]
 8000224:	48a0      	ldr	r0, [pc, #640]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 8000226:	461a      	mov	r2, r3
 8000228:	0052      	lsls	r2, r2, #1
 800022a:	441a      	add	r2, r3
 800022c:	00d3      	lsls	r3, r2, #3
 800022e:	461a      	mov	r2, r3
 8000230:	460b      	mov	r3, r1
 8000232:	005b      	lsls	r3, r3, #1
 8000234:	440b      	add	r3, r1
 8000236:	019b      	lsls	r3, r3, #6
 8000238:	4413      	add	r3, r2
 800023a:	4403      	add	r3, r0
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	6818      	ldr	r0, [r3, #0]
 8000240:	79f9      	ldrb	r1, [r7, #7]
 8000242:	79bb      	ldrb	r3, [r7, #6]
 8000244:	4c98      	ldr	r4, [pc, #608]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 8000246:	461a      	mov	r2, r3
 8000248:	0052      	lsls	r2, r2, #1
 800024a:	441a      	add	r2, r3
 800024c:	00d3      	lsls	r3, r2, #3
 800024e:	461a      	mov	r2, r3
 8000250:	460b      	mov	r3, r1
 8000252:	005b      	lsls	r3, r3, #1
 8000254:	440b      	add	r3, r1
 8000256:	019b      	lsls	r3, r3, #6
 8000258:	4413      	add	r3, r2
 800025a:	4423      	add	r3, r4
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
 8000262:	601a      	str	r2, [r3, #0]
	// Clear DMA2_S0FCR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] &= ~(0xff << 0);
 8000264:	79f9      	ldrb	r1, [r7, #7]
 8000266:	79bb      	ldrb	r3, [r7, #6]
 8000268:	488f      	ldr	r0, [pc, #572]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 800026a:	461a      	mov	r2, r3
 800026c:	0052      	lsls	r2, r2, #1
 800026e:	441a      	add	r2, r3
 8000270:	00d3      	lsls	r3, r2, #3
 8000272:	461a      	mov	r2, r3
 8000274:	460b      	mov	r3, r1
 8000276:	005b      	lsls	r3, r3, #1
 8000278:	440b      	add	r3, r1
 800027a:	019b      	lsls	r3, r3, #6
 800027c:	4413      	add	r3, r2
 800027e:	4403      	add	r3, r0
 8000280:	3314      	adds	r3, #20
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	6818      	ldr	r0, [r3, #0]
 8000286:	79f9      	ldrb	r1, [r7, #7]
 8000288:	79bb      	ldrb	r3, [r7, #6]
 800028a:	4c87      	ldr	r4, [pc, #540]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 800028c:	461a      	mov	r2, r3
 800028e:	0052      	lsls	r2, r2, #1
 8000290:	441a      	add	r2, r3
 8000292:	00d3      	lsls	r3, r2, #3
 8000294:	461a      	mov	r2, r3
 8000296:	460b      	mov	r3, r1
 8000298:	005b      	lsls	r3, r3, #1
 800029a:	440b      	add	r3, r1
 800029c:	019b      	lsls	r3, r3, #6
 800029e:	4413      	add	r3, r2
 80002a0:	4423      	add	r3, r4
 80002a2:	3314      	adds	r3, #20
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
 80002aa:	601a      	str	r2, [r3, #0]

//	 DMA_SxCR Bit 0 Disabling
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] &= ~(0x01 << 0);
 80002ac:	79f9      	ldrb	r1, [r7, #7]
 80002ae:	79bb      	ldrb	r3, [r7, #6]
 80002b0:	487d      	ldr	r0, [pc, #500]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 80002b2:	461a      	mov	r2, r3
 80002b4:	0052      	lsls	r2, r2, #1
 80002b6:	441a      	add	r2, r3
 80002b8:	00d3      	lsls	r3, r2, #3
 80002ba:	461a      	mov	r2, r3
 80002bc:	460b      	mov	r3, r1
 80002be:	005b      	lsls	r3, r3, #1
 80002c0:	440b      	add	r3, r1
 80002c2:	019b      	lsls	r3, r3, #6
 80002c4:	4413      	add	r3, r2
 80002c6:	4403      	add	r3, r0
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	6818      	ldr	r0, [r3, #0]
 80002cc:	79f9      	ldrb	r1, [r7, #7]
 80002ce:	79bb      	ldrb	r3, [r7, #6]
 80002d0:	4c75      	ldr	r4, [pc, #468]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 80002d2:	461a      	mov	r2, r3
 80002d4:	0052      	lsls	r2, r2, #1
 80002d6:	441a      	add	r2, r3
 80002d8:	00d3      	lsls	r3, r2, #3
 80002da:	461a      	mov	r2, r3
 80002dc:	460b      	mov	r3, r1
 80002de:	005b      	lsls	r3, r3, #1
 80002e0:	440b      	add	r3, r1
 80002e2:	019b      	lsls	r3, r3, #6
 80002e4:	4413      	add	r3, r2
 80002e6:	4423      	add	r3, r4
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	f020 0201 	bic.w	r2, r0, #1
 80002ee:	601a      	str	r2, [r3, #0]
//	 Bits 17:16 Priority level
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x03 << 16);//11 very high
 80002f0:	79f9      	ldrb	r1, [r7, #7]
 80002f2:	79bb      	ldrb	r3, [r7, #6]
 80002f4:	486c      	ldr	r0, [pc, #432]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 80002f6:	461a      	mov	r2, r3
 80002f8:	0052      	lsls	r2, r2, #1
 80002fa:	441a      	add	r2, r3
 80002fc:	00d3      	lsls	r3, r2, #3
 80002fe:	461a      	mov	r2, r3
 8000300:	460b      	mov	r3, r1
 8000302:	005b      	lsls	r3, r3, #1
 8000304:	440b      	add	r3, r1
 8000306:	019b      	lsls	r3, r3, #6
 8000308:	4413      	add	r3, r2
 800030a:	4403      	add	r3, r0
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	6818      	ldr	r0, [r3, #0]
 8000310:	79f9      	ldrb	r1, [r7, #7]
 8000312:	79bb      	ldrb	r3, [r7, #6]
 8000314:	4c64      	ldr	r4, [pc, #400]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 8000316:	461a      	mov	r2, r3
 8000318:	0052      	lsls	r2, r2, #1
 800031a:	441a      	add	r2, r3
 800031c:	00d3      	lsls	r3, r2, #3
 800031e:	461a      	mov	r2, r3
 8000320:	460b      	mov	r3, r1
 8000322:	005b      	lsls	r3, r3, #1
 8000324:	440b      	add	r3, r1
 8000326:	019b      	lsls	r3, r3, #6
 8000328:	4413      	add	r3, r2
 800032a:	4423      	add	r3, r4
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	f440 3240 	orr.w	r2, r0, #196608	; 0x30000
 8000332:	601a      	str	r2, [r3, #0]

//	 Bits 7:6 DIR: Data transfer direction
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x02 << 6);//10: Memory-to-memory
 8000334:	79f9      	ldrb	r1, [r7, #7]
 8000336:	79bb      	ldrb	r3, [r7, #6]
 8000338:	485b      	ldr	r0, [pc, #364]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 800033a:	461a      	mov	r2, r3
 800033c:	0052      	lsls	r2, r2, #1
 800033e:	441a      	add	r2, r3
 8000340:	00d3      	lsls	r3, r2, #3
 8000342:	461a      	mov	r2, r3
 8000344:	460b      	mov	r3, r1
 8000346:	005b      	lsls	r3, r3, #1
 8000348:	440b      	add	r3, r1
 800034a:	019b      	lsls	r3, r3, #6
 800034c:	4413      	add	r3, r2
 800034e:	4403      	add	r3, r0
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	6818      	ldr	r0, [r3, #0]
 8000354:	79f9      	ldrb	r1, [r7, #7]
 8000356:	79bb      	ldrb	r3, [r7, #6]
 8000358:	4c53      	ldr	r4, [pc, #332]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 800035a:	461a      	mov	r2, r3
 800035c:	0052      	lsls	r2, r2, #1
 800035e:	441a      	add	r2, r3
 8000360:	00d3      	lsls	r3, r2, #3
 8000362:	461a      	mov	r2, r3
 8000364:	460b      	mov	r3, r1
 8000366:	005b      	lsls	r3, r3, #1
 8000368:	440b      	add	r3, r1
 800036a:	019b      	lsls	r3, r3, #6
 800036c:	4413      	add	r3, r2
 800036e:	4423      	add	r3, r4
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	f040 0280 	orr.w	r2, r0, #128	; 0x80
 8000376:	601a      	str	r2, [r3, #0]

//	 Item_Size
//	 Bits 14:13 MSIZE: Memory data size
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Item_Size << 13);
 8000378:	79f9      	ldrb	r1, [r7, #7]
 800037a:	79bb      	ldrb	r3, [r7, #6]
 800037c:	484a      	ldr	r0, [pc, #296]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 800037e:	461a      	mov	r2, r3
 8000380:	0052      	lsls	r2, r2, #1
 8000382:	441a      	add	r2, r3
 8000384:	00d3      	lsls	r3, r2, #3
 8000386:	461a      	mov	r2, r3
 8000388:	460b      	mov	r3, r1
 800038a:	005b      	lsls	r3, r3, #1
 800038c:	440b      	add	r3, r1
 800038e:	019b      	lsls	r3, r3, #6
 8000390:	4413      	add	r3, r2
 8000392:	4403      	add	r3, r0
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	681c      	ldr	r4, [r3, #0]
 8000398:	6a3b      	ldr	r3, [r7, #32]
 800039a:	0358      	lsls	r0, r3, #13
 800039c:	79f9      	ldrb	r1, [r7, #7]
 800039e:	79bb      	ldrb	r3, [r7, #6]
 80003a0:	4d41      	ldr	r5, [pc, #260]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 80003a2:	461a      	mov	r2, r3
 80003a4:	0052      	lsls	r2, r2, #1
 80003a6:	441a      	add	r2, r3
 80003a8:	00d3      	lsls	r3, r2, #3
 80003aa:	461a      	mov	r2, r3
 80003ac:	460b      	mov	r3, r1
 80003ae:	005b      	lsls	r3, r3, #1
 80003b0:	440b      	add	r3, r1
 80003b2:	019b      	lsls	r3, r3, #6
 80003b4:	4413      	add	r3, r2
 80003b6:	442b      	add	r3, r5
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	ea44 0200 	orr.w	r2, r4, r0
 80003be:	601a      	str	r2, [r3, #0]
//	 Bits 12:11 PSIZE: Peripheral data size
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Item_Size << 11);
 80003c0:	79f9      	ldrb	r1, [r7, #7]
 80003c2:	79bb      	ldrb	r3, [r7, #6]
 80003c4:	4838      	ldr	r0, [pc, #224]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 80003c6:	461a      	mov	r2, r3
 80003c8:	0052      	lsls	r2, r2, #1
 80003ca:	441a      	add	r2, r3
 80003cc:	00d3      	lsls	r3, r2, #3
 80003ce:	461a      	mov	r2, r3
 80003d0:	460b      	mov	r3, r1
 80003d2:	005b      	lsls	r3, r3, #1
 80003d4:	440b      	add	r3, r1
 80003d6:	019b      	lsls	r3, r3, #6
 80003d8:	4413      	add	r3, r2
 80003da:	4403      	add	r3, r0
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	681c      	ldr	r4, [r3, #0]
 80003e0:	6a3b      	ldr	r3, [r7, #32]
 80003e2:	02d8      	lsls	r0, r3, #11
 80003e4:	79f9      	ldrb	r1, [r7, #7]
 80003e6:	79bb      	ldrb	r3, [r7, #6]
 80003e8:	4d2f      	ldr	r5, [pc, #188]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 80003ea:	461a      	mov	r2, r3
 80003ec:	0052      	lsls	r2, r2, #1
 80003ee:	441a      	add	r2, r3
 80003f0:	00d3      	lsls	r3, r2, #3
 80003f2:	461a      	mov	r2, r3
 80003f4:	460b      	mov	r3, r1
 80003f6:	005b      	lsls	r3, r3, #1
 80003f8:	440b      	add	r3, r1
 80003fa:	019b      	lsls	r3, r3, #6
 80003fc:	4413      	add	r3, r2
 80003fe:	442b      	add	r3, r5
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	ea44 0200 	orr.w	r2, r4, r0
 8000406:	601a      	str	r2, [r3, #0]

	switch(Mode)
 8000408:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800040c:	2b00      	cmp	r3, #0
 800040e:	d04d      	beq.n	80004ac <DMA_ChannelParameters+0x2a0>
 8000410:	2b01      	cmp	r3, #1
 8000412:	d170      	bne.n	80004f6 <DMA_ChannelParameters+0x2ea>
	{
		case(FIFO):
	  //	 Bit 2 DMDIS: Direct mode disable
			*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] |= (0x01 << 2); //1: Direct mode disabled
 8000414:	79f9      	ldrb	r1, [r7, #7]
 8000416:	79bb      	ldrb	r3, [r7, #6]
 8000418:	4823      	ldr	r0, [pc, #140]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 800041a:	461a      	mov	r2, r3
 800041c:	0052      	lsls	r2, r2, #1
 800041e:	441a      	add	r2, r3
 8000420:	00d3      	lsls	r3, r2, #3
 8000422:	461a      	mov	r2, r3
 8000424:	460b      	mov	r3, r1
 8000426:	005b      	lsls	r3, r3, #1
 8000428:	440b      	add	r3, r1
 800042a:	019b      	lsls	r3, r3, #6
 800042c:	4413      	add	r3, r2
 800042e:	4403      	add	r3, r0
 8000430:	3314      	adds	r3, #20
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	6818      	ldr	r0, [r3, #0]
 8000436:	79f9      	ldrb	r1, [r7, #7]
 8000438:	79bb      	ldrb	r3, [r7, #6]
 800043a:	4c1b      	ldr	r4, [pc, #108]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 800043c:	461a      	mov	r2, r3
 800043e:	0052      	lsls	r2, r2, #1
 8000440:	441a      	add	r2, r3
 8000442:	00d3      	lsls	r3, r2, #3
 8000444:	461a      	mov	r2, r3
 8000446:	460b      	mov	r3, r1
 8000448:	005b      	lsls	r3, r3, #1
 800044a:	440b      	add	r3, r1
 800044c:	019b      	lsls	r3, r3, #6
 800044e:	4413      	add	r3, r2
 8000450:	4423      	add	r3, r4
 8000452:	3314      	adds	r3, #20
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	f040 0204 	orr.w	r2, r0, #4
 800045a:	601a      	str	r2, [r3, #0]
	  //	 Bits 1:0 FTH: FIFO threshold selection
			*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] |= (0x03 << 0); //01: 1/2 full FIFO
 800045c:	79f9      	ldrb	r1, [r7, #7]
 800045e:	79bb      	ldrb	r3, [r7, #6]
 8000460:	4811      	ldr	r0, [pc, #68]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 8000462:	461a      	mov	r2, r3
 8000464:	0052      	lsls	r2, r2, #1
 8000466:	441a      	add	r2, r3
 8000468:	00d3      	lsls	r3, r2, #3
 800046a:	461a      	mov	r2, r3
 800046c:	460b      	mov	r3, r1
 800046e:	005b      	lsls	r3, r3, #1
 8000470:	440b      	add	r3, r1
 8000472:	019b      	lsls	r3, r3, #6
 8000474:	4413      	add	r3, r2
 8000476:	4403      	add	r3, r0
 8000478:	3314      	adds	r3, #20
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	6818      	ldr	r0, [r3, #0]
 800047e:	79f9      	ldrb	r1, [r7, #7]
 8000480:	79bb      	ldrb	r3, [r7, #6]
 8000482:	4c09      	ldr	r4, [pc, #36]	; (80004a8 <DMA_ChannelParameters+0x29c>)
 8000484:	461a      	mov	r2, r3
 8000486:	0052      	lsls	r2, r2, #1
 8000488:	441a      	add	r2, r3
 800048a:	00d3      	lsls	r3, r2, #3
 800048c:	461a      	mov	r2, r3
 800048e:	460b      	mov	r3, r1
 8000490:	005b      	lsls	r3, r3, #1
 8000492:	440b      	add	r3, r1
 8000494:	019b      	lsls	r3, r3, #6
 8000496:	4413      	add	r3, r2
 8000498:	4423      	add	r3, r4
 800049a:	3314      	adds	r3, #20
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	f040 0203 	orr.w	r2, r0, #3
 80004a2:	601a      	str	r2, [r3, #0]
		break;
 80004a4:	e027      	b.n	80004f6 <DMA_ChannelParameters+0x2ea>
 80004a6:	bf00      	nop
 80004a8:	20000000 	.word	0x20000000
		case(Direct_Mode):
			*DMA_LOOKUP[Peripheral_ID][Stream_NM][5] &= ~(0x01 << 2); //0: Direct mode enabled
 80004ac:	79f9      	ldrb	r1, [r7, #7]
 80004ae:	79bb      	ldrb	r3, [r7, #6]
 80004b0:	48a7      	ldr	r0, [pc, #668]	; (8000750 <DMA_ChannelParameters+0x544>)
 80004b2:	461a      	mov	r2, r3
 80004b4:	0052      	lsls	r2, r2, #1
 80004b6:	441a      	add	r2, r3
 80004b8:	00d3      	lsls	r3, r2, #3
 80004ba:	461a      	mov	r2, r3
 80004bc:	460b      	mov	r3, r1
 80004be:	005b      	lsls	r3, r3, #1
 80004c0:	440b      	add	r3, r1
 80004c2:	019b      	lsls	r3, r3, #6
 80004c4:	4413      	add	r3, r2
 80004c6:	4403      	add	r3, r0
 80004c8:	3314      	adds	r3, #20
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	6818      	ldr	r0, [r3, #0]
 80004ce:	79f9      	ldrb	r1, [r7, #7]
 80004d0:	79bb      	ldrb	r3, [r7, #6]
 80004d2:	4c9f      	ldr	r4, [pc, #636]	; (8000750 <DMA_ChannelParameters+0x544>)
 80004d4:	461a      	mov	r2, r3
 80004d6:	0052      	lsls	r2, r2, #1
 80004d8:	441a      	add	r2, r3
 80004da:	00d3      	lsls	r3, r2, #3
 80004dc:	461a      	mov	r2, r3
 80004de:	460b      	mov	r3, r1
 80004e0:	005b      	lsls	r3, r3, #1
 80004e2:	440b      	add	r3, r1
 80004e4:	019b      	lsls	r3, r3, #6
 80004e6:	4413      	add	r3, r2
 80004e8:	4423      	add	r3, r4
 80004ea:	3314      	adds	r3, #20
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	f020 0204 	bic.w	r2, r0, #4
 80004f2:	601a      	str	r2, [r3, #0]
		break;
 80004f4:	bf00      	nop
	}
	if(Transfer_Type == Single)
 80004f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80004f8:	2b00      	cmp	r3, #0
 80004fa:	d140      	bne.n	800057e <DMA_ChannelParameters+0x372>
	{
//	   Bits 24:23 MBURST: Memory burst transfer configuration
	   *DMA_LOOKUP[Peripheral_ID][Stream_NM][0] &= ~(Single << 23);
 80004fc:	79f9      	ldrb	r1, [r7, #7]
 80004fe:	79bb      	ldrb	r3, [r7, #6]
 8000500:	4893      	ldr	r0, [pc, #588]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000502:	461a      	mov	r2, r3
 8000504:	0052      	lsls	r2, r2, #1
 8000506:	441a      	add	r2, r3
 8000508:	00d3      	lsls	r3, r2, #3
 800050a:	461a      	mov	r2, r3
 800050c:	460b      	mov	r3, r1
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	440b      	add	r3, r1
 8000512:	019b      	lsls	r3, r3, #6
 8000514:	4413      	add	r3, r2
 8000516:	4403      	add	r3, r0
 8000518:	6818      	ldr	r0, [r3, #0]
 800051a:	79f9      	ldrb	r1, [r7, #7]
 800051c:	79bb      	ldrb	r3, [r7, #6]
 800051e:	4c8c      	ldr	r4, [pc, #560]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000520:	461a      	mov	r2, r3
 8000522:	0052      	lsls	r2, r2, #1
 8000524:	441a      	add	r2, r3
 8000526:	00d3      	lsls	r3, r2, #3
 8000528:	461a      	mov	r2, r3
 800052a:	460b      	mov	r3, r1
 800052c:	005b      	lsls	r3, r3, #1
 800052e:	440b      	add	r3, r1
 8000530:	019b      	lsls	r3, r3, #6
 8000532:	4413      	add	r3, r2
 8000534:	4423      	add	r3, r4
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	6802      	ldr	r2, [r0, #0]
 800053a:	601a      	str	r2, [r3, #0]
//	   Bits 22:21 PBURST: Peripheral burst transfer configuration
	   *DMA_LOOKUP[Peripheral_ID][Stream_NM][0] &= ~(Single << 21);
 800053c:	79f9      	ldrb	r1, [r7, #7]
 800053e:	79bb      	ldrb	r3, [r7, #6]
 8000540:	4883      	ldr	r0, [pc, #524]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000542:	461a      	mov	r2, r3
 8000544:	0052      	lsls	r2, r2, #1
 8000546:	441a      	add	r2, r3
 8000548:	00d3      	lsls	r3, r2, #3
 800054a:	461a      	mov	r2, r3
 800054c:	460b      	mov	r3, r1
 800054e:	005b      	lsls	r3, r3, #1
 8000550:	440b      	add	r3, r1
 8000552:	019b      	lsls	r3, r3, #6
 8000554:	4413      	add	r3, r2
 8000556:	4403      	add	r3, r0
 8000558:	6818      	ldr	r0, [r3, #0]
 800055a:	79f9      	ldrb	r1, [r7, #7]
 800055c:	79bb      	ldrb	r3, [r7, #6]
 800055e:	4c7c      	ldr	r4, [pc, #496]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000560:	461a      	mov	r2, r3
 8000562:	0052      	lsls	r2, r2, #1
 8000564:	441a      	add	r2, r3
 8000566:	00d3      	lsls	r3, r2, #3
 8000568:	461a      	mov	r2, r3
 800056a:	460b      	mov	r3, r1
 800056c:	005b      	lsls	r3, r3, #1
 800056e:	440b      	add	r3, r1
 8000570:	019b      	lsls	r3, r3, #6
 8000572:	4413      	add	r3, r2
 8000574:	4423      	add	r3, r4
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	6802      	ldr	r2, [r0, #0]
 800057a:	601a      	str	r2, [r3, #0]
 800057c:	e047      	b.n	800060e <DMA_ChannelParameters+0x402>
	}
	else
	{
	   *DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Transfer_Type << 23);
 800057e:	79f9      	ldrb	r1, [r7, #7]
 8000580:	79bb      	ldrb	r3, [r7, #6]
 8000582:	4873      	ldr	r0, [pc, #460]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000584:	461a      	mov	r2, r3
 8000586:	0052      	lsls	r2, r2, #1
 8000588:	441a      	add	r2, r3
 800058a:	00d3      	lsls	r3, r2, #3
 800058c:	461a      	mov	r2, r3
 800058e:	460b      	mov	r3, r1
 8000590:	005b      	lsls	r3, r3, #1
 8000592:	440b      	add	r3, r1
 8000594:	019b      	lsls	r3, r3, #6
 8000596:	4413      	add	r3, r2
 8000598:	4403      	add	r3, r0
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	681c      	ldr	r4, [r3, #0]
 800059e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80005a0:	05d8      	lsls	r0, r3, #23
 80005a2:	79f9      	ldrb	r1, [r7, #7]
 80005a4:	79bb      	ldrb	r3, [r7, #6]
 80005a6:	4d6a      	ldr	r5, [pc, #424]	; (8000750 <DMA_ChannelParameters+0x544>)
 80005a8:	461a      	mov	r2, r3
 80005aa:	0052      	lsls	r2, r2, #1
 80005ac:	441a      	add	r2, r3
 80005ae:	00d3      	lsls	r3, r2, #3
 80005b0:	461a      	mov	r2, r3
 80005b2:	460b      	mov	r3, r1
 80005b4:	005b      	lsls	r3, r3, #1
 80005b6:	440b      	add	r3, r1
 80005b8:	019b      	lsls	r3, r3, #6
 80005ba:	4413      	add	r3, r2
 80005bc:	442b      	add	r3, r5
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	ea44 0200 	orr.w	r2, r4, r0
 80005c4:	601a      	str	r2, [r3, #0]
	   *DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (Transfer_Type << 21);
 80005c6:	79f9      	ldrb	r1, [r7, #7]
 80005c8:	79bb      	ldrb	r3, [r7, #6]
 80005ca:	4861      	ldr	r0, [pc, #388]	; (8000750 <DMA_ChannelParameters+0x544>)
 80005cc:	461a      	mov	r2, r3
 80005ce:	0052      	lsls	r2, r2, #1
 80005d0:	441a      	add	r2, r3
 80005d2:	00d3      	lsls	r3, r2, #3
 80005d4:	461a      	mov	r2, r3
 80005d6:	460b      	mov	r3, r1
 80005d8:	005b      	lsls	r3, r3, #1
 80005da:	440b      	add	r3, r1
 80005dc:	019b      	lsls	r3, r3, #6
 80005de:	4413      	add	r3, r2
 80005e0:	4403      	add	r3, r0
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	681c      	ldr	r4, [r3, #0]
 80005e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80005e8:	0558      	lsls	r0, r3, #21
 80005ea:	79f9      	ldrb	r1, [r7, #7]
 80005ec:	79bb      	ldrb	r3, [r7, #6]
 80005ee:	4d58      	ldr	r5, [pc, #352]	; (8000750 <DMA_ChannelParameters+0x544>)
 80005f0:	461a      	mov	r2, r3
 80005f2:	0052      	lsls	r2, r2, #1
 80005f4:	441a      	add	r2, r3
 80005f6:	00d3      	lsls	r3, r2, #3
 80005f8:	461a      	mov	r2, r3
 80005fa:	460b      	mov	r3, r1
 80005fc:	005b      	lsls	r3, r3, #1
 80005fe:	440b      	add	r3, r1
 8000600:	019b      	lsls	r3, r3, #6
 8000602:	4413      	add	r3, r2
 8000604:	442b      	add	r3, r5
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	ea44 0200 	orr.w	r2, r4, r0
 800060c:	601a      	str	r2, [r3, #0]
	}

//	 Bit 9 PINC: Peripheral increment mode
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 9); //1: PINC incremented
 800060e:	79f9      	ldrb	r1, [r7, #7]
 8000610:	79bb      	ldrb	r3, [r7, #6]
 8000612:	484f      	ldr	r0, [pc, #316]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000614:	461a      	mov	r2, r3
 8000616:	0052      	lsls	r2, r2, #1
 8000618:	441a      	add	r2, r3
 800061a:	00d3      	lsls	r3, r2, #3
 800061c:	461a      	mov	r2, r3
 800061e:	460b      	mov	r3, r1
 8000620:	005b      	lsls	r3, r3, #1
 8000622:	440b      	add	r3, r1
 8000624:	019b      	lsls	r3, r3, #6
 8000626:	4413      	add	r3, r2
 8000628:	4403      	add	r3, r0
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	6818      	ldr	r0, [r3, #0]
 800062e:	79f9      	ldrb	r1, [r7, #7]
 8000630:	79bb      	ldrb	r3, [r7, #6]
 8000632:	4c47      	ldr	r4, [pc, #284]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000634:	461a      	mov	r2, r3
 8000636:	0052      	lsls	r2, r2, #1
 8000638:	441a      	add	r2, r3
 800063a:	00d3      	lsls	r3, r2, #3
 800063c:	461a      	mov	r2, r3
 800063e:	460b      	mov	r3, r1
 8000640:	005b      	lsls	r3, r3, #1
 8000642:	440b      	add	r3, r1
 8000644:	019b      	lsls	r3, r3, #6
 8000646:	4413      	add	r3, r2
 8000648:	4423      	add	r3, r4
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	f440 7200 	orr.w	r2, r0, #512	; 0x200
 8000650:	601a      	str	r2, [r3, #0]
//	 Bit 10 MINC: Memory increment mode
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 10); //1: MINC incremented
 8000652:	79f9      	ldrb	r1, [r7, #7]
 8000654:	79bb      	ldrb	r3, [r7, #6]
 8000656:	483e      	ldr	r0, [pc, #248]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000658:	461a      	mov	r2, r3
 800065a:	0052      	lsls	r2, r2, #1
 800065c:	441a      	add	r2, r3
 800065e:	00d3      	lsls	r3, r2, #3
 8000660:	461a      	mov	r2, r3
 8000662:	460b      	mov	r3, r1
 8000664:	005b      	lsls	r3, r3, #1
 8000666:	440b      	add	r3, r1
 8000668:	019b      	lsls	r3, r3, #6
 800066a:	4413      	add	r3, r2
 800066c:	4403      	add	r3, r0
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	6818      	ldr	r0, [r3, #0]
 8000672:	79f9      	ldrb	r1, [r7, #7]
 8000674:	79bb      	ldrb	r3, [r7, #6]
 8000676:	4c36      	ldr	r4, [pc, #216]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000678:	461a      	mov	r2, r3
 800067a:	0052      	lsls	r2, r2, #1
 800067c:	441a      	add	r2, r3
 800067e:	00d3      	lsls	r3, r2, #3
 8000680:	461a      	mov	r2, r3
 8000682:	460b      	mov	r3, r1
 8000684:	005b      	lsls	r3, r3, #1
 8000686:	440b      	add	r3, r1
 8000688:	019b      	lsls	r3, r3, #6
 800068a:	4413      	add	r3, r2
 800068c:	4423      	add	r3, r4
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	f440 6280 	orr.w	r2, r0, #1024	; 0x400
 8000694:	601a      	str	r2, [r3, #0]
//   Bit 4 TCIE: Transfer complete interrupt enable
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 4);// 1: TC interrupt enabled
 8000696:	79f9      	ldrb	r1, [r7, #7]
 8000698:	79bb      	ldrb	r3, [r7, #6]
 800069a:	482d      	ldr	r0, [pc, #180]	; (8000750 <DMA_ChannelParameters+0x544>)
 800069c:	461a      	mov	r2, r3
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	441a      	add	r2, r3
 80006a2:	00d3      	lsls	r3, r2, #3
 80006a4:	461a      	mov	r2, r3
 80006a6:	460b      	mov	r3, r1
 80006a8:	005b      	lsls	r3, r3, #1
 80006aa:	440b      	add	r3, r1
 80006ac:	019b      	lsls	r3, r3, #6
 80006ae:	4413      	add	r3, r2
 80006b0:	4403      	add	r3, r0
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	6818      	ldr	r0, [r3, #0]
 80006b6:	79f9      	ldrb	r1, [r7, #7]
 80006b8:	79bb      	ldrb	r3, [r7, #6]
 80006ba:	4c25      	ldr	r4, [pc, #148]	; (8000750 <DMA_ChannelParameters+0x544>)
 80006bc:	461a      	mov	r2, r3
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	441a      	add	r2, r3
 80006c2:	00d3      	lsls	r3, r2, #3
 80006c4:	461a      	mov	r2, r3
 80006c6:	460b      	mov	r3, r1
 80006c8:	005b      	lsls	r3, r3, #1
 80006ca:	440b      	add	r3, r1
 80006cc:	019b      	lsls	r3, r3, #6
 80006ce:	4413      	add	r3, r2
 80006d0:	4423      	add	r3, r4
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	f040 0210 	orr.w	r2, r0, #16
 80006d8:	601a      	str	r2, [r3, #0]

//	 DMA2_S0PAR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][2] = (unsigned int)Src_Add;
 80006da:	79f9      	ldrb	r1, [r7, #7]
 80006dc:	79bb      	ldrb	r3, [r7, #6]
 80006de:	481c      	ldr	r0, [pc, #112]	; (8000750 <DMA_ChannelParameters+0x544>)
 80006e0:	461a      	mov	r2, r3
 80006e2:	0052      	lsls	r2, r2, #1
 80006e4:	441a      	add	r2, r3
 80006e6:	00d3      	lsls	r3, r2, #3
 80006e8:	461a      	mov	r2, r3
 80006ea:	460b      	mov	r3, r1
 80006ec:	005b      	lsls	r3, r3, #1
 80006ee:	440b      	add	r3, r1
 80006f0:	019b      	lsls	r3, r3, #6
 80006f2:	4413      	add	r3, r2
 80006f4:	4403      	add	r3, r0
 80006f6:	3308      	adds	r3, #8
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	683a      	ldr	r2, [r7, #0]
 80006fc:	601a      	str	r2, [r3, #0]
//	 DMA2_S0M0AR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][3] = (unsigned int)Dest_Add;
 80006fe:	79f9      	ldrb	r1, [r7, #7]
 8000700:	79bb      	ldrb	r3, [r7, #6]
 8000702:	4813      	ldr	r0, [pc, #76]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000704:	461a      	mov	r2, r3
 8000706:	0052      	lsls	r2, r2, #1
 8000708:	441a      	add	r2, r3
 800070a:	00d3      	lsls	r3, r2, #3
 800070c:	461a      	mov	r2, r3
 800070e:	460b      	mov	r3, r1
 8000710:	005b      	lsls	r3, r3, #1
 8000712:	440b      	add	r3, r1
 8000714:	019b      	lsls	r3, r3, #6
 8000716:	4413      	add	r3, r2
 8000718:	4403      	add	r3, r0
 800071a:	330c      	adds	r3, #12
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	69ba      	ldr	r2, [r7, #24]
 8000720:	601a      	str	r2, [r3, #0]
//	 DMA2_S0NDTR
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][1] = NM_Of_Transfer;
 8000722:	79f9      	ldrb	r1, [r7, #7]
 8000724:	79bb      	ldrb	r3, [r7, #6]
 8000726:	480a      	ldr	r0, [pc, #40]	; (8000750 <DMA_ChannelParameters+0x544>)
 8000728:	461a      	mov	r2, r3
 800072a:	0052      	lsls	r2, r2, #1
 800072c:	441a      	add	r2, r3
 800072e:	00d3      	lsls	r3, r2, #3
 8000730:	461a      	mov	r2, r3
 8000732:	460b      	mov	r3, r1
 8000734:	005b      	lsls	r3, r3, #1
 8000736:	440b      	add	r3, r1
 8000738:	019b      	lsls	r3, r3, #6
 800073a:	4413      	add	r3, r2
 800073c:	4403      	add	r3, r0
 800073e:	3304      	adds	r3, #4
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	69fa      	ldr	r2, [r7, #28]
 8000744:	601a      	str	r2, [r3, #0]
}
 8000746:	bf00      	nop
 8000748:	370c      	adds	r7, #12
 800074a:	46bd      	mov	sp, r7
 800074c:	bcb0      	pop	{r4, r5, r7}
 800074e:	4770      	bx	lr
 8000750:	20000000 	.word	0x20000000

08000754 <DMA_Req_To_Start_Transfer>:

//Enabling Stream
void DMA_Req_To_Start_Transfer(unsigned char Peripheral_ID, unsigned char Stream_NM)
{
 8000754:	b490      	push	{r4, r7}
 8000756:	b082      	sub	sp, #8
 8000758:	af00      	add	r7, sp, #0
 800075a:	4603      	mov	r3, r0
 800075c:	460a      	mov	r2, r1
 800075e:	71fb      	strb	r3, [r7, #7]
 8000760:	4613      	mov	r3, r2
 8000762:	71bb      	strb	r3, [r7, #6]
//   Clear all Interrupt flags
	if(Stream_NM < (unsigned char)4)
 8000764:	79bb      	ldrb	r3, [r7, #6]
 8000766:	2b03      	cmp	r3, #3
 8000768:	d807      	bhi.n	800077a <DMA_Req_To_Start_Transfer+0x26>
	{
		 *DMA_INTTERRUPT_LOOKUP[Peripheral_ID][2] = 0x3D;//STREAM0 STRAMCLEARFLAGARRAY[STREAM_NM]
 800076a:	79fb      	ldrb	r3, [r7, #7]
 800076c:	4a16      	ldr	r2, [pc, #88]	; (80007c8 <DMA_Req_To_Start_Transfer+0x74>)
 800076e:	011b      	lsls	r3, r3, #4
 8000770:	4413      	add	r3, r2
 8000772:	3308      	adds	r3, #8
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	223d      	movs	r2, #61	; 0x3d
 8000778:	601a      	str	r2, [r3, #0]
//		 *DMA_INTTERRUPT_LOOKUP[Peripheral_ID][3] = ;//DMA_HIFCR
		//	*DMA2_HIFCR = 0x00; //for streams akbr mn 3
	}

//	 DMA_SxCR Bit 0 EN
	*DMA_LOOKUP[Peripheral_ID][Stream_NM][0] |= (0x01 << 0);
 800077a:	79f9      	ldrb	r1, [r7, #7]
 800077c:	79bb      	ldrb	r3, [r7, #6]
 800077e:	4813      	ldr	r0, [pc, #76]	; (80007cc <DMA_Req_To_Start_Transfer+0x78>)
 8000780:	461a      	mov	r2, r3
 8000782:	0052      	lsls	r2, r2, #1
 8000784:	441a      	add	r2, r3
 8000786:	00d3      	lsls	r3, r2, #3
 8000788:	461a      	mov	r2, r3
 800078a:	460b      	mov	r3, r1
 800078c:	005b      	lsls	r3, r3, #1
 800078e:	440b      	add	r3, r1
 8000790:	019b      	lsls	r3, r3, #6
 8000792:	4413      	add	r3, r2
 8000794:	4403      	add	r3, r0
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	6818      	ldr	r0, [r3, #0]
 800079a:	79f9      	ldrb	r1, [r7, #7]
 800079c:	79bb      	ldrb	r3, [r7, #6]
 800079e:	4c0b      	ldr	r4, [pc, #44]	; (80007cc <DMA_Req_To_Start_Transfer+0x78>)
 80007a0:	461a      	mov	r2, r3
 80007a2:	0052      	lsls	r2, r2, #1
 80007a4:	441a      	add	r2, r3
 80007a6:	00d3      	lsls	r3, r2, #3
 80007a8:	461a      	mov	r2, r3
 80007aa:	460b      	mov	r3, r1
 80007ac:	005b      	lsls	r3, r3, #1
 80007ae:	440b      	add	r3, r1
 80007b0:	019b      	lsls	r3, r3, #6
 80007b2:	4413      	add	r3, r2
 80007b4:	4423      	add	r3, r4
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	f040 0201 	orr.w	r2, r0, #1
 80007bc:	601a      	str	r2, [r3, #0]
}
 80007be:	bf00      	nop
 80007c0:	3708      	adds	r7, #8
 80007c2:	46bd      	mov	sp, r7
 80007c4:	bc90      	pop	{r4, r7}
 80007c6:	4770      	bx	lr
 80007c8:	20000180 	.word	0x20000180
 80007cc:	20000000 	.word	0x20000000

080007d0 <DMA_ISR>:


//ISR - A function to check the transfer compelete
void DMA_ISR(void)
{
 80007d0:	b580      	push	{r7, lr}
 80007d2:	af00      	add	r7, sp, #0
//	check interrupt from TC
	if((*DMA2_LISR >> 5)&1)
 80007d4:	4b07      	ldr	r3, [pc, #28]	; (80007f4 <DMA_ISR+0x24>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	f003 0320 	and.w	r3, r3, #32
 80007dc:	2b00      	cmp	r3, #0
 80007de:	d001      	beq.n	80007e4 <DMA_ISR+0x14>
	{
//		 unsigned char State = TransferCompelete;
		 DMA_TransferState();
 80007e0:	f000 f9a8 	bl	8000b34 <DMA_TransferState>
	}
	// notification
//	 CTCIFx: Stream x clear transfer complete interrupt flag
	*DMA2_LIFCR |= (0x01 << 5);
 80007e4:	4b04      	ldr	r3, [pc, #16]	; (80007f8 <DMA_ISR+0x28>)
 80007e6:	681b      	ldr	r3, [r3, #0]
 80007e8:	4a03      	ldr	r2, [pc, #12]	; (80007f8 <DMA_ISR+0x28>)
 80007ea:	f043 0320 	orr.w	r3, r3, #32
 80007ee:	6013      	str	r3, [r2, #0]
}
 80007f0:	bf00      	nop
 80007f2:	bd80      	pop	{r7, pc}
 80007f4:	40026400 	.word	0x40026400
 80007f8:	40026408 	.word	0x40026408

080007fc <GPIO_EnableClock>:

unsigned int *LOOKUP[2][5] =
{{GPIOA_MODER, GPIOA_OTYPER, GPIOA_PUPDR, GPIOA_IDR, GPIOA_ODR},
 {GPIOB_MODER, GPIOB_OTYPER, GPIOB_PUPDR,  GPIOB_IDR, GPIOB_ODR}};

void GPIO_EnableClock(unsigned char PortID) {
 80007fc:	b480      	push	{r7}
 80007fe:	b083      	sub	sp, #12
 8000800:	af00      	add	r7, sp, #0
 8000802:	4603      	mov	r3, r0
 8000804:	71fb      	strb	r3, [r7, #7]
     *RCC_AHB1ENR |= (0x01 << PortID);
 8000806:	4b08      	ldr	r3, [pc, #32]	; (8000828 <GPIO_EnableClock+0x2c>)
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	79fa      	ldrb	r2, [r7, #7]
 800080c:	2101      	movs	r1, #1
 800080e:	fa01 f202 	lsl.w	r2, r1, r2
 8000812:	4611      	mov	r1, r2
 8000814:	4a04      	ldr	r2, [pc, #16]	; (8000828 <GPIO_EnableClock+0x2c>)
 8000816:	430b      	orrs	r3, r1
 8000818:	6013      	str	r3, [r2, #0]
}
 800081a:	bf00      	nop
 800081c:	370c      	adds	r7, #12
 800081e:	46bd      	mov	sp, r7
 8000820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000824:	4770      	bx	lr
 8000826:	bf00      	nop
 8000828:	40023830 	.word	0x40023830

0800082c <GPIO_Init>:

void GPIO_Init(unsigned char PortID, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState) {
 800082c:	b490      	push	{r4, r7}
 800082e:	b082      	sub	sp, #8
 8000830:	af00      	add	r7, sp, #0
 8000832:	4604      	mov	r4, r0
 8000834:	4608      	mov	r0, r1
 8000836:	4611      	mov	r1, r2
 8000838:	461a      	mov	r2, r3
 800083a:	4623      	mov	r3, r4
 800083c:	71fb      	strb	r3, [r7, #7]
 800083e:	4603      	mov	r3, r0
 8000840:	71bb      	strb	r3, [r7, #6]
 8000842:	460b      	mov	r3, r1
 8000844:	717b      	strb	r3, [r7, #5]
 8000846:	4613      	mov	r3, r2
 8000848:	713b      	strb	r3, [r7, #4]
               
      *LOOKUP[PortID][0] &= ~(0x03 << 2 * PinNum);
 800084a:	79fa      	ldrb	r2, [r7, #7]
 800084c:	4956      	ldr	r1, [pc, #344]	; (80009a8 <GPIO_Init+0x17c>)
 800084e:	4613      	mov	r3, r2
 8000850:	009b      	lsls	r3, r3, #2
 8000852:	4413      	add	r3, r2
 8000854:	009b      	lsls	r3, r3, #2
 8000856:	440b      	add	r3, r1
 8000858:	681b      	ldr	r3, [r3, #0]
 800085a:	6819      	ldr	r1, [r3, #0]
 800085c:	79bb      	ldrb	r3, [r7, #6]
 800085e:	005b      	lsls	r3, r3, #1
 8000860:	2203      	movs	r2, #3
 8000862:	fa02 f303 	lsl.w	r3, r2, r3
 8000866:	43db      	mvns	r3, r3
 8000868:	461c      	mov	r4, r3
 800086a:	79fa      	ldrb	r2, [r7, #7]
 800086c:	484e      	ldr	r0, [pc, #312]	; (80009a8 <GPIO_Init+0x17c>)
 800086e:	4613      	mov	r3, r2
 8000870:	009b      	lsls	r3, r3, #2
 8000872:	4413      	add	r3, r2
 8000874:	009b      	lsls	r3, r3, #2
 8000876:	4403      	add	r3, r0
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	ea01 0204 	and.w	r2, r1, r4
 800087e:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][0] |= PinMode << 2 * PinNum;
 8000880:	79fa      	ldrb	r2, [r7, #7]
 8000882:	4949      	ldr	r1, [pc, #292]	; (80009a8 <GPIO_Init+0x17c>)
 8000884:	4613      	mov	r3, r2
 8000886:	009b      	lsls	r3, r3, #2
 8000888:	4413      	add	r3, r2
 800088a:	009b      	lsls	r3, r3, #2
 800088c:	440b      	add	r3, r1
 800088e:	681b      	ldr	r3, [r3, #0]
 8000890:	6819      	ldr	r1, [r3, #0]
 8000892:	797a      	ldrb	r2, [r7, #5]
 8000894:	79bb      	ldrb	r3, [r7, #6]
 8000896:	005b      	lsls	r3, r3, #1
 8000898:	fa02 f303 	lsl.w	r3, r2, r3
 800089c:	461c      	mov	r4, r3
 800089e:	79fa      	ldrb	r2, [r7, #7]
 80008a0:	4841      	ldr	r0, [pc, #260]	; (80009a8 <GPIO_Init+0x17c>)
 80008a2:	4613      	mov	r3, r2
 80008a4:	009b      	lsls	r3, r3, #2
 80008a6:	4413      	add	r3, r2
 80008a8:	009b      	lsls	r3, r3, #2
 80008aa:	4403      	add	r3, r0
 80008ac:	681b      	ldr	r3, [r3, #0]
 80008ae:	ea41 0204 	orr.w	r2, r1, r4
 80008b2:	601a      	str	r2, [r3, #0]

      *LOOKUP[PortID][1] &= ~(1 << PinNum);
 80008b4:	79fa      	ldrb	r2, [r7, #7]
 80008b6:	493c      	ldr	r1, [pc, #240]	; (80009a8 <GPIO_Init+0x17c>)
 80008b8:	4613      	mov	r3, r2
 80008ba:	009b      	lsls	r3, r3, #2
 80008bc:	4413      	add	r3, r2
 80008be:	009b      	lsls	r3, r3, #2
 80008c0:	440b      	add	r3, r1
 80008c2:	3304      	adds	r3, #4
 80008c4:	681b      	ldr	r3, [r3, #0]
 80008c6:	6819      	ldr	r1, [r3, #0]
 80008c8:	79bb      	ldrb	r3, [r7, #6]
 80008ca:	2201      	movs	r2, #1
 80008cc:	fa02 f303 	lsl.w	r3, r2, r3
 80008d0:	43db      	mvns	r3, r3
 80008d2:	461c      	mov	r4, r3
 80008d4:	79fa      	ldrb	r2, [r7, #7]
 80008d6:	4834      	ldr	r0, [pc, #208]	; (80009a8 <GPIO_Init+0x17c>)
 80008d8:	4613      	mov	r3, r2
 80008da:	009b      	lsls	r3, r3, #2
 80008dc:	4413      	add	r3, r2
 80008de:	009b      	lsls	r3, r3, #2
 80008e0:	4403      	add	r3, r0
 80008e2:	3304      	adds	r3, #4
 80008e4:	681b      	ldr	r3, [r3, #0]
 80008e6:	ea01 0204 	and.w	r2, r1, r4
 80008ea:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 80008ec:	79fa      	ldrb	r2, [r7, #7]
 80008ee:	492e      	ldr	r1, [pc, #184]	; (80009a8 <GPIO_Init+0x17c>)
 80008f0:	4613      	mov	r3, r2
 80008f2:	009b      	lsls	r3, r3, #2
 80008f4:	4413      	add	r3, r2
 80008f6:	009b      	lsls	r3, r3, #2
 80008f8:	440b      	add	r3, r1
 80008fa:	3304      	adds	r3, #4
 80008fc:	681b      	ldr	r3, [r3, #0]
 80008fe:	6819      	ldr	r1, [r3, #0]
 8000900:	793b      	ldrb	r3, [r7, #4]
 8000902:	f003 0201 	and.w	r2, r3, #1
 8000906:	79bb      	ldrb	r3, [r7, #6]
 8000908:	fa02 f303 	lsl.w	r3, r2, r3
 800090c:	461c      	mov	r4, r3
 800090e:	79fa      	ldrb	r2, [r7, #7]
 8000910:	4825      	ldr	r0, [pc, #148]	; (80009a8 <GPIO_Init+0x17c>)
 8000912:	4613      	mov	r3, r2
 8000914:	009b      	lsls	r3, r3, #2
 8000916:	4413      	add	r3, r2
 8000918:	009b      	lsls	r3, r3, #2
 800091a:	4403      	add	r3, r0
 800091c:	3304      	adds	r3, #4
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	ea41 0204 	orr.w	r2, r1, r4
 8000924:	601a      	str	r2, [r3, #0]

      *LOOKUP[PortID][2] &= ~(0x03 << 2 * PinNum);
 8000926:	79fa      	ldrb	r2, [r7, #7]
 8000928:	491f      	ldr	r1, [pc, #124]	; (80009a8 <GPIO_Init+0x17c>)
 800092a:	4613      	mov	r3, r2
 800092c:	009b      	lsls	r3, r3, #2
 800092e:	4413      	add	r3, r2
 8000930:	009b      	lsls	r3, r3, #2
 8000932:	440b      	add	r3, r1
 8000934:	3308      	adds	r3, #8
 8000936:	681b      	ldr	r3, [r3, #0]
 8000938:	6819      	ldr	r1, [r3, #0]
 800093a:	79bb      	ldrb	r3, [r7, #6]
 800093c:	005b      	lsls	r3, r3, #1
 800093e:	2203      	movs	r2, #3
 8000940:	fa02 f303 	lsl.w	r3, r2, r3
 8000944:	43db      	mvns	r3, r3
 8000946:	461c      	mov	r4, r3
 8000948:	79fa      	ldrb	r2, [r7, #7]
 800094a:	4817      	ldr	r0, [pc, #92]	; (80009a8 <GPIO_Init+0x17c>)
 800094c:	4613      	mov	r3, r2
 800094e:	009b      	lsls	r3, r3, #2
 8000950:	4413      	add	r3, r2
 8000952:	009b      	lsls	r3, r3, #2
 8000954:	4403      	add	r3, r0
 8000956:	3308      	adds	r3, #8
 8000958:	681b      	ldr	r3, [r3, #0]
 800095a:	ea01 0204 	and.w	r2, r1, r4
 800095e:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][2] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum); 
 8000960:	79fa      	ldrb	r2, [r7, #7]
 8000962:	4911      	ldr	r1, [pc, #68]	; (80009a8 <GPIO_Init+0x17c>)
 8000964:	4613      	mov	r3, r2
 8000966:	009b      	lsls	r3, r3, #2
 8000968:	4413      	add	r3, r2
 800096a:	009b      	lsls	r3, r3, #2
 800096c:	440b      	add	r3, r1
 800096e:	3308      	adds	r3, #8
 8000970:	681b      	ldr	r3, [r3, #0]
 8000972:	6819      	ldr	r1, [r3, #0]
 8000974:	793b      	ldrb	r3, [r7, #4]
 8000976:	105b      	asrs	r3, r3, #1
 8000978:	f003 0203 	and.w	r2, r3, #3
 800097c:	79bb      	ldrb	r3, [r7, #6]
 800097e:	005b      	lsls	r3, r3, #1
 8000980:	fa02 f303 	lsl.w	r3, r2, r3
 8000984:	461c      	mov	r4, r3
 8000986:	79fa      	ldrb	r2, [r7, #7]
 8000988:	4807      	ldr	r0, [pc, #28]	; (80009a8 <GPIO_Init+0x17c>)
 800098a:	4613      	mov	r3, r2
 800098c:	009b      	lsls	r3, r3, #2
 800098e:	4413      	add	r3, r2
 8000990:	009b      	lsls	r3, r3, #2
 8000992:	4403      	add	r3, r0
 8000994:	3308      	adds	r3, #8
 8000996:	681b      	ldr	r3, [r3, #0]
 8000998:	ea41 0204 	orr.w	r2, r1, r4
 800099c:	601a      	str	r2, [r3, #0]
}
 800099e:	bf00      	nop
 80009a0:	3708      	adds	r7, #8
 80009a2:	46bd      	mov	sp, r7
 80009a4:	bc90      	pop	{r4, r7}
 80009a6:	4770      	bx	lr
 80009a8:	200001a0 	.word	0x200001a0

080009ac <GPIO_WritePin>:

unsigned char GPIO_WritePin(unsigned char PortID, unsigned char PinNum,
                            unsigned char Data) {
 80009ac:	b490      	push	{r4, r7}
 80009ae:	b084      	sub	sp, #16
 80009b0:	af00      	add	r7, sp, #0
 80009b2:	4603      	mov	r3, r0
 80009b4:	71fb      	strb	r3, [r7, #7]
 80009b6:	460b      	mov	r3, r1
 80009b8:	71bb      	strb	r3, [r7, #6]
 80009ba:	4613      	mov	r3, r2
 80009bc:	717b      	strb	r3, [r7, #5]
  unsigned char result;
     if (((*LOOKUP[PortID][0] & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1) {
 80009be:	79fa      	ldrb	r2, [r7, #7]
 80009c0:	492c      	ldr	r1, [pc, #176]	; (8000a74 <GPIO_WritePin+0xc8>)
 80009c2:	4613      	mov	r3, r2
 80009c4:	009b      	lsls	r3, r3, #2
 80009c6:	4413      	add	r3, r2
 80009c8:	009b      	lsls	r3, r3, #2
 80009ca:	440b      	add	r3, r1
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	79ba      	ldrb	r2, [r7, #6]
 80009d2:	0052      	lsls	r2, r2, #1
 80009d4:	2103      	movs	r1, #3
 80009d6:	fa01 f202 	lsl.w	r2, r1, r2
 80009da:	401a      	ands	r2, r3
 80009dc:	79bb      	ldrb	r3, [r7, #6]
 80009de:	005b      	lsls	r3, r3, #1
 80009e0:	fa22 f303 	lsr.w	r3, r2, r3
 80009e4:	2b01      	cmp	r3, #1
 80009e6:	d13d      	bne.n	8000a64 <GPIO_WritePin+0xb8>
        if (Data) {
 80009e8:	797b      	ldrb	r3, [r7, #5]
 80009ea:	2b00      	cmp	r3, #0
 80009ec:	d01b      	beq.n	8000a26 <GPIO_WritePin+0x7a>
          *LOOKUP[PortID][4] |= (1 << PinNum);
 80009ee:	79fa      	ldrb	r2, [r7, #7]
 80009f0:	4920      	ldr	r1, [pc, #128]	; (8000a74 <GPIO_WritePin+0xc8>)
 80009f2:	4613      	mov	r3, r2
 80009f4:	009b      	lsls	r3, r3, #2
 80009f6:	4413      	add	r3, r2
 80009f8:	009b      	lsls	r3, r3, #2
 80009fa:	440b      	add	r3, r1
 80009fc:	3310      	adds	r3, #16
 80009fe:	681b      	ldr	r3, [r3, #0]
 8000a00:	6819      	ldr	r1, [r3, #0]
 8000a02:	79bb      	ldrb	r3, [r7, #6]
 8000a04:	2201      	movs	r2, #1
 8000a06:	fa02 f303 	lsl.w	r3, r2, r3
 8000a0a:	461c      	mov	r4, r3
 8000a0c:	79fa      	ldrb	r2, [r7, #7]
 8000a0e:	4819      	ldr	r0, [pc, #100]	; (8000a74 <GPIO_WritePin+0xc8>)
 8000a10:	4613      	mov	r3, r2
 8000a12:	009b      	lsls	r3, r3, #2
 8000a14:	4413      	add	r3, r2
 8000a16:	009b      	lsls	r3, r3, #2
 8000a18:	4403      	add	r3, r0
 8000a1a:	3310      	adds	r3, #16
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	ea41 0204 	orr.w	r2, r1, r4
 8000a22:	601a      	str	r2, [r3, #0]
 8000a24:	e01b      	b.n	8000a5e <GPIO_WritePin+0xb2>
        } else {
          *LOOKUP[PortID][4] &= ~(1 << PinNum);
 8000a26:	79fa      	ldrb	r2, [r7, #7]
 8000a28:	4912      	ldr	r1, [pc, #72]	; (8000a74 <GPIO_WritePin+0xc8>)
 8000a2a:	4613      	mov	r3, r2
 8000a2c:	009b      	lsls	r3, r3, #2
 8000a2e:	4413      	add	r3, r2
 8000a30:	009b      	lsls	r3, r3, #2
 8000a32:	440b      	add	r3, r1
 8000a34:	3310      	adds	r3, #16
 8000a36:	681b      	ldr	r3, [r3, #0]
 8000a38:	6819      	ldr	r1, [r3, #0]
 8000a3a:	79bb      	ldrb	r3, [r7, #6]
 8000a3c:	2201      	movs	r2, #1
 8000a3e:	fa02 f303 	lsl.w	r3, r2, r3
 8000a42:	43db      	mvns	r3, r3
 8000a44:	461c      	mov	r4, r3
 8000a46:	79fa      	ldrb	r2, [r7, #7]
 8000a48:	480a      	ldr	r0, [pc, #40]	; (8000a74 <GPIO_WritePin+0xc8>)
 8000a4a:	4613      	mov	r3, r2
 8000a4c:	009b      	lsls	r3, r3, #2
 8000a4e:	4413      	add	r3, r2
 8000a50:	009b      	lsls	r3, r3, #2
 8000a52:	4403      	add	r3, r0
 8000a54:	3310      	adds	r3, #16
 8000a56:	681b      	ldr	r3, [r3, #0]
 8000a58:	ea01 0204 	and.w	r2, r1, r4
 8000a5c:	601a      	str	r2, [r3, #0]
        }
        result = OK;
 8000a5e:	2300      	movs	r3, #0
 8000a60:	73fb      	strb	r3, [r7, #15]
 8000a62:	e001      	b.n	8000a68 <GPIO_WritePin+0xbc>
      } else {
        result = NOK;
 8000a64:	2301      	movs	r3, #1
 8000a66:	73fb      	strb	r3, [r7, #15]
      }

  return result;
 8000a68:	7bfb      	ldrb	r3, [r7, #15]
}
 8000a6a:	4618      	mov	r0, r3
 8000a6c:	3710      	adds	r7, #16
 8000a6e:	46bd      	mov	sp, r7
 8000a70:	bc90      	pop	{r4, r7}
 8000a72:	4770      	bx	lr
 8000a74:	200001a0 	.word	0x200001a0

08000a78 <NVIC_Controller>:
    *EXTI_FTSR |= 1 << PIN;

}

void NVIC_Controller(unsigned char Stream_NM)
{
 8000a78:	b480      	push	{r7}
 8000a7a:	b083      	sub	sp, #12
 8000a7c:	af00      	add	r7, sp, #0
 8000a7e:	4603      	mov	r3, r0
 8000a80:	71fb      	strb	r3, [r7, #7]
//	 *NVIC_ISER0 = 1 << (6+PIN);
	 *NVIC_ISER1 = 1 << (24 + Stream_NM);//DMA_2
 8000a82:	79fb      	ldrb	r3, [r7, #7]
 8000a84:	3318      	adds	r3, #24
 8000a86:	2201      	movs	r2, #1
 8000a88:	409a      	lsls	r2, r3
 8000a8a:	4b04      	ldr	r3, [pc, #16]	; (8000a9c <NVIC_Controller+0x24>)
 8000a8c:	601a      	str	r2, [r3, #0]
//	 *NVIC_ISER0 = 1 << (11+ Stream_NM);//DMA_1
}
 8000a8e:	bf00      	nop
 8000a90:	370c      	adds	r7, #12
 8000a92:	46bd      	mov	sp, r7
 8000a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a98:	4770      	bx	lr
 8000a9a:	bf00      	nop
 8000a9c:	e000e104 	.word	0xe000e104

08000aa0 <main>:
unsigned int DEST_Arr[BUF_SIZE];

void DMA_TransferState(void);

int main(void)
{
 8000aa0:	b580      	push	{r7, lr}
 8000aa2:	b088      	sub	sp, #32
 8000aa4:	af06      	add	r7, sp, #24
	for(unsigned int i=0; i<BUF_SIZE; i++)
 8000aa6:	2300      	movs	r3, #0
 8000aa8:	607b      	str	r3, [r7, #4]
 8000aaa:	e010      	b.n	8000ace <main+0x2e>
	{
		SCR_Arr[i]  = 100*(i+1);
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	3301      	adds	r3, #1
 8000ab0:	2264      	movs	r2, #100	; 0x64
 8000ab2:	fb02 f203 	mul.w	r2, r2, r3
 8000ab6:	491d      	ldr	r1, [pc, #116]	; (8000b2c <main+0x8c>)
 8000ab8:	687b      	ldr	r3, [r7, #4]
 8000aba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		DEST_Arr[i] = 0;
 8000abe:	4a1c      	ldr	r2, [pc, #112]	; (8000b30 <main+0x90>)
 8000ac0:	687b      	ldr	r3, [r7, #4]
 8000ac2:	2100      	movs	r1, #0
 8000ac4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(unsigned int i=0; i<BUF_SIZE; i++)
 8000ac8:	687b      	ldr	r3, [r7, #4]
 8000aca:	3301      	adds	r3, #1
 8000acc:	607b      	str	r3, [r7, #4]
 8000ace:	687b      	ldr	r3, [r7, #4]
 8000ad0:	2b63      	cmp	r3, #99	; 0x63
 8000ad2:	d9eb      	bls.n	8000aac <main+0xc>
	}

	GPIO_EnableClock(0);  // Enable GPIOA
 8000ad4:	2000      	movs	r0, #0
 8000ad6:	f7ff fe91 	bl	80007fc <GPIO_EnableClock>
	GPIO_Init(0, 0, OUTPUT, PUSH_PULL); //Red Led
 8000ada:	2300      	movs	r3, #0
 8000adc:	2201      	movs	r2, #1
 8000ade:	2100      	movs	r1, #0
 8000ae0:	2000      	movs	r0, #0
 8000ae2:	f7ff fea3 	bl	800082c <GPIO_Init>
	GPIO_Init(0, 2, OUTPUT, PUSH_PULL); //Green Led
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	2201      	movs	r2, #1
 8000aea:	2102      	movs	r1, #2
 8000aec:	2000      	movs	r0, #0
 8000aee:	f7ff fe9d 	bl	800082c <GPIO_Init>


	DMA_Init(DMA_2, Stream_0);
 8000af2:	2100      	movs	r1, #0
 8000af4:	2001      	movs	r0, #1
 8000af6:	f7ff fb6d 	bl	80001d4 <DMA_Init>
	DMA_ChannelParameters(DMA_2, Stream_0, Software, SCR_Arr, DEST_Arr, BUF_SIZE, Word, FIFO, Single);
 8000afa:	2300      	movs	r3, #0
 8000afc:	9304      	str	r3, [sp, #16]
 8000afe:	2301      	movs	r3, #1
 8000b00:	9303      	str	r3, [sp, #12]
 8000b02:	2302      	movs	r3, #2
 8000b04:	9302      	str	r3, [sp, #8]
 8000b06:	2364      	movs	r3, #100	; 0x64
 8000b08:	9301      	str	r3, [sp, #4]
 8000b0a:	4b09      	ldr	r3, [pc, #36]	; (8000b30 <main+0x90>)
 8000b0c:	9300      	str	r3, [sp, #0]
 8000b0e:	4b07      	ldr	r3, [pc, #28]	; (8000b2c <main+0x8c>)
 8000b10:	2200      	movs	r2, #0
 8000b12:	2100      	movs	r1, #0
 8000b14:	2001      	movs	r0, #1
 8000b16:	f7ff fb79 	bl	800020c <DMA_ChannelParameters>

	NVIC_Controller(Stream_0);
 8000b1a:	2000      	movs	r0, #0
 8000b1c:	f7ff ffac 	bl	8000a78 <NVIC_Controller>
	DMA_Req_To_Start_Transfer(DMA_2, Stream_0);
 8000b20:	2100      	movs	r1, #0
 8000b22:	2001      	movs	r0, #1
 8000b24:	f7ff fe16 	bl	8000754 <DMA_Req_To_Start_Transfer>

    while (1){}
 8000b28:	e7fe      	b.n	8000b28 <main+0x88>
 8000b2a:	bf00      	nop
 8000b2c:	200001e4 	.word	0x200001e4
 8000b30:	20000374 	.word	0x20000374

08000b34 <DMA_TransferState>:
    return 0;
}

void DMA_TransferState()
{
 8000b34:	b580      	push	{r7, lr}
 8000b36:	af00      	add	r7, sp, #0
	if((SCR_Arr[0] == DEST_Arr[0]) && (SCR_Arr[99] == DEST_Arr[99]))
 8000b38:	4b12      	ldr	r3, [pc, #72]	; (8000b84 <DMA_TransferState+0x50>)
 8000b3a:	681a      	ldr	r2, [r3, #0]
 8000b3c:	4b12      	ldr	r3, [pc, #72]	; (8000b88 <DMA_TransferState+0x54>)
 8000b3e:	681b      	ldr	r3, [r3, #0]
 8000b40:	429a      	cmp	r2, r3
 8000b42:	d112      	bne.n	8000b6a <DMA_TransferState+0x36>
 8000b44:	4b0f      	ldr	r3, [pc, #60]	; (8000b84 <DMA_TransferState+0x50>)
 8000b46:	f8d3 218c 	ldr.w	r2, [r3, #396]	; 0x18c
 8000b4a:	4b0f      	ldr	r3, [pc, #60]	; (8000b88 <DMA_TransferState+0x54>)
 8000b4c:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8000b50:	429a      	cmp	r2, r3
 8000b52:	d10a      	bne.n	8000b6a <DMA_TransferState+0x36>
	{
		GPIO_WritePin(0, 0, 0); //Red Led
 8000b54:	2200      	movs	r2, #0
 8000b56:	2100      	movs	r1, #0
 8000b58:	2000      	movs	r0, #0
 8000b5a:	f7ff ff27 	bl	80009ac <GPIO_WritePin>
		GPIO_WritePin(0, 2, 1); //Green Led
 8000b5e:	2201      	movs	r2, #1
 8000b60:	2102      	movs	r1, #2
 8000b62:	2000      	movs	r0, #0
 8000b64:	f7ff ff22 	bl	80009ac <GPIO_WritePin>
 8000b68:	e00a      	b.n	8000b80 <DMA_TransferState+0x4c>
	}
	else{
		GPIO_WritePin(0, 0, 1); //Red Led
 8000b6a:	2201      	movs	r2, #1
 8000b6c:	2100      	movs	r1, #0
 8000b6e:	2000      	movs	r0, #0
 8000b70:	f7ff ff1c 	bl	80009ac <GPIO_WritePin>
		GPIO_WritePin(0, 2, 0); //Green Led
 8000b74:	2200      	movs	r2, #0
 8000b76:	2102      	movs	r1, #2
 8000b78:	2000      	movs	r0, #0
 8000b7a:	f7ff ff17 	bl	80009ac <GPIO_WritePin>
	}
}
 8000b7e:	bf00      	nop
 8000b80:	bf00      	nop
 8000b82:	bd80      	pop	{r7, pc}
 8000b84:	200001e4 	.word	0x200001e4
 8000b88:	20000374 	.word	0x20000374

08000b8c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000b8c:	b480      	push	{r7}
 8000b8e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000b90:	4b06      	ldr	r3, [pc, #24]	; (8000bac <SystemInit+0x20>)
 8000b92:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000b96:	4a05      	ldr	r2, [pc, #20]	; (8000bac <SystemInit+0x20>)
 8000b98:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000b9c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000ba0:	bf00      	nop
 8000ba2:	46bd      	mov	sp, r7
 8000ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ba8:	4770      	bx	lr
 8000baa:	bf00      	nop
 8000bac:	e000ed00 	.word	0xe000ed00

08000bb0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000bb0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000be8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000bb4:	480d      	ldr	r0, [pc, #52]	; (8000bec <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000bb6:	490e      	ldr	r1, [pc, #56]	; (8000bf0 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000bb8:	4a0e      	ldr	r2, [pc, #56]	; (8000bf4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000bba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000bbc:	e002      	b.n	8000bc4 <LoopCopyDataInit>

08000bbe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000bbe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000bc0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000bc2:	3304      	adds	r3, #4

08000bc4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000bc4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000bc6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000bc8:	d3f9      	bcc.n	8000bbe <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000bca:	4a0b      	ldr	r2, [pc, #44]	; (8000bf8 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000bcc:	4c0b      	ldr	r4, [pc, #44]	; (8000bfc <LoopFillZerobss+0x26>)
  movs r3, #0
 8000bce:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000bd0:	e001      	b.n	8000bd6 <LoopFillZerobss>

08000bd2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000bd2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000bd4:	3204      	adds	r2, #4

08000bd6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000bd6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000bd8:	d3fb      	bcc.n	8000bd2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000bda:	f7ff ffd7 	bl	8000b8c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000bde:	f000 f811 	bl	8000c04 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000be2:	f7ff ff5d 	bl	8000aa0 <main>
  bx  lr    
 8000be6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000be8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000bec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000bf0:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 8000bf4:	08000c6c 	.word	0x08000c6c
  ldr r2, =_sbss
 8000bf8:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 8000bfc:	20000504 	.word	0x20000504

08000c00 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000c00:	e7fe      	b.n	8000c00 <ADC_IRQHandler>
	...

08000c04 <__libc_init_array>:
 8000c04:	b570      	push	{r4, r5, r6, lr}
 8000c06:	4d0d      	ldr	r5, [pc, #52]	; (8000c3c <__libc_init_array+0x38>)
 8000c08:	4c0d      	ldr	r4, [pc, #52]	; (8000c40 <__libc_init_array+0x3c>)
 8000c0a:	1b64      	subs	r4, r4, r5
 8000c0c:	10a4      	asrs	r4, r4, #2
 8000c0e:	2600      	movs	r6, #0
 8000c10:	42a6      	cmp	r6, r4
 8000c12:	d109      	bne.n	8000c28 <__libc_init_array+0x24>
 8000c14:	4d0b      	ldr	r5, [pc, #44]	; (8000c44 <__libc_init_array+0x40>)
 8000c16:	4c0c      	ldr	r4, [pc, #48]	; (8000c48 <__libc_init_array+0x44>)
 8000c18:	f000 f818 	bl	8000c4c <_init>
 8000c1c:	1b64      	subs	r4, r4, r5
 8000c1e:	10a4      	asrs	r4, r4, #2
 8000c20:	2600      	movs	r6, #0
 8000c22:	42a6      	cmp	r6, r4
 8000c24:	d105      	bne.n	8000c32 <__libc_init_array+0x2e>
 8000c26:	bd70      	pop	{r4, r5, r6, pc}
 8000c28:	f855 3b04 	ldr.w	r3, [r5], #4
 8000c2c:	4798      	blx	r3
 8000c2e:	3601      	adds	r6, #1
 8000c30:	e7ee      	b.n	8000c10 <__libc_init_array+0xc>
 8000c32:	f855 3b04 	ldr.w	r3, [r5], #4
 8000c36:	4798      	blx	r3
 8000c38:	3601      	adds	r6, #1
 8000c3a:	e7f2      	b.n	8000c22 <__libc_init_array+0x1e>
 8000c3c:	08000c64 	.word	0x08000c64
 8000c40:	08000c64 	.word	0x08000c64
 8000c44:	08000c64 	.word	0x08000c64
 8000c48:	08000c68 	.word	0x08000c68

08000c4c <_init>:
 8000c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c4e:	bf00      	nop
 8000c50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c52:	bc08      	pop	{r3}
 8000c54:	469e      	mov	lr, r3
 8000c56:	4770      	bx	lr

08000c58 <_fini>:
 8000c58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c5a:	bf00      	nop
 8000c5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c5e:	bc08      	pop	{r3}
 8000c60:	469e      	mov	lr, r3
 8000c62:	4770      	bx	lr
